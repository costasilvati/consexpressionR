i <- 0
for(i in 1:length(gse95077_expDef_result)){
tmp <- consensusList(gse95077_expDef_result ,
gse95077_deByTool,
threshold = i)
#cat(i)
gse95077_consThresold[[i]] <- tmp$edger
}
names(gse95077_consThresold) <- as.character(seq_along(gse95077_expDef_result))
remove(tmp, i)
View(gse95077_consThresold)
sra010153_deByTool <- listDeByTool(sra010153_cons_result,
sra010153_expDef_result)
View(sra010153_deByTool)
writeResults(data = sra010153_deByTool,
sepCharacter = ",",
outPath = outDir,
toolName = "deByTool")
writeResults(data = sra010153_deByTool,
sepCharacter = ",",
toolName = "deByTool")
sra010153_qPCR_2$Gene <- trimws(sra010153_qPCR_2$Gene)
SRA010153_qPCR <- read.csv("/Volumes/SD128GB/tese/datasets/SRA010153/SRA010153_qPCR.csv")
View(SRA010153_qPCR)
sra010153_qPCR_2$Gene <- trimws(sra010153_qPCR_2$Gene)
sra010153_qPCR$Gene <- trimws(sra010153_qPCR_2$Gene)
sra010153_qPCR$Gene <- trimws(sra010153_qPCR$Gene)
SRA010153_qPCR$Gene <- trimws(SRA010153_qPCR$Gene)
sra010153_metrics <- metricsCalc(deToolList = sra010153_expDef_result,
goldList = sra010153_qPCR_2,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = "/Volumes/SD128GB/tese/datasets/sra010153/results_082024/",
writeData = TRUE )
sra010153_metrics <- metricsCalc(deToolList = sra010153_expDef_result,
goldList = SRA010153_qPCR,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE )
View(sra010153_metrics)
View(SRA010153_qPCR)
sra010153_metrics <- metricsCalc(deToolList = sra010153_expDef_result,
goldList = SRA010153_qPCR,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE )
sra010153_metrics <- metricsCalc(deToolList = sra010153_expDef_result,
goldList = SRA010153_qPCR,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE,
goldNegativeValue = 0)
#crie a função abaixo
metricsCalc <- function(deToolList,
goldList,
goldColGeneName = 1,
goldColValue = 2,
goldPositiveValue = c(1,-1),
goldNegativeValue = 0,
experimentName = "experiment",
pathOut = ".",
writeData = FALSE
){
cols = c("TP","FP", "TN", "FN", "TPR","Specificity","PPV", "ACC", "F1-Score")
toolNames <- names(deToolList)
metrics <- data.frame(matrix(0, ncol = length(cols),
nrow = length(toolNames)))
colnames(metrics) <- cols
row.names(metrics) <- toolNames
for (i in 1:length(toolNames)) {
cat(i,"\n")
condicao_TP <- (goldList[,goldColValue] %in% goldPositiveValue) & (goldList[,goldColGeneName] %in% row.names(deToolList[[i]]))
tp <- sum(condicao_TP)
condicao_FP <- (goldList[,goldColValue] == goldNegativeValue) & (goldList[,goldColGeneName] %in% row.names(deToolList[[i]]))
fp <- sum(condicao_FP)
condicao_TN <- (goldList[,goldColValue] == goldNegativeValue) & ((goldList[,goldColGeneName] %in% row.names(deToolList[[i]])))
tn <- sum(condicao_TN)
condicao_FN <- (goldList[,goldColValue] %in% goldPositiveValue) & (!(goldList[,goldColGeneName] %in% row.names(deToolList[[i]])))
fn <- sum(condicao_FN)
#TPR (True Positive Rate), SPC (Specificity), PPV (Positive Predict Value), ACC (Accuracy) and F1 measure
tpr <- tp/(tp+fn)
spc <- tn/(tn+fp)
ppv <- tp/(tp+fp)
acc <- (tp + tn)/(tp+fp+tn+fn)
f1score <- 2*(ppv * tpr)/(ppv+tpr)
metrics[i,] <- c(tp, fp, tn, fn, tpr, spc, ppv, acc, f1score)
}
if(writeData){
write.csv(metrics, file = paste0(pathOut,experimentName,"_metrics.csv"))
}
return(metrics)
}
sra010153_metrics <- metricsCalc(deToolList = sra010153_expDef_result,
goldList = SRA010153_qPCR,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE,
goldNegativeValue = 0)
View(sra010153_expDef_result)
View(sra010153_deByTool)
sra010153_metrics <- metricsCalc(deToolList = sra010153_deByTool,
goldList = SRA010153_qPCR,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE,
goldNegativeValue = 0)
sra010153_metrics <- metricsCalc(deToolList = sra010153_expDef_result,
goldList = SRA010153_qPCR,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE,
goldNegativeValue = 0)
head(sra010153_deByTool)
#---- PCR SRA010153
SRA010153_qPCR <- read.csv("/Volumes/SD128GB/tese/datasets/SRA010153/SRA010153_qPCR2.csv")
#---- PCR SRA010153
SRA010153_qPCR <- read.csv("/Volumes/SD128GB/tese/datasets/SRA010153/SRA010153_qPCR_2.csv")
SRA010153_qPCR$Gene <- trimws(SRA010153_qPCR$Gene)
sra010153_metrics <- metricsCalc(deToolList = sra010153_expDef_result,
goldList = SRA010153_qPCR,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE )
sra010153_consThresold <- list()
i <- 0
for(i in 1:length(sra010153_expDef_result)){
tmp <- consensusList(sra010153_expDef_result ,
sra010153_deByTool,
threshold = i)
#cat(i)
sra010153_consThresold[[i]] <- tmp$ebseq
}
names(sra010153_consThresold) <- as.character(seq_along(sra010153_expDef_result))
remove(tmp, i)
sra010153_consesno_metrics <- metricsCalc(deToolList = sra010153_consThresold,
goldList = sra010153_qPCR_2,
goldColGeneName = 1,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE )
sra010153_consThresold <- list()
i <- 0
for(i in 1:length(sra010153_expDef_result)){
tmp <- consensusList(sra010153_expDef_result ,
sra010153_deByTool,
threshold = i)
#cat(i)
sra010153_consThresold[[i]] <- tmp$ebseq
}
names(sra010153_consThresold) <- as.character(seq_along(sra010153_expDef_result))
remove(tmp, i)
sra010153_consesno_metrics <- metricsCalc(deToolList = sra010153_consThresold,
goldList = sra010153_qPCR,
goldColGeneName = 1,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE )
sra010153_consThresold <- list()
i <- 0
for(i in 1:length(sra010153_expDef_result)){
tmp <- consensusList(sra010153_expDef_result ,
sra010153_deByTool,
threshold = i)
#cat(i)
sra010153_consThresold[[i]] <- tmp$ebseq
}
names(sra010153_consThresold) <- as.character(seq_along(sra010153_expDef_result))
remove(tmp, i)
sra010153_consesno_metrics <- metricsCalc(deToolList = sra010153_consThresold,
goldList = SRA010153_qPCR,
goldColGeneName = 1,
goldColValue = 2,
goldPositiveValue = c(1,-1),
experimentName = "sra010153",
pathOut = outDir,
writeData = TRUE )
View(sra010153_consesno_metrics)
?consensusList
View(sra010153_consThresold)
View(sra010153_consThresold$1)
View(sra010153_consThresold$'1')
View(sra010153_consThresold$'2')
View(sra010153_deByTool)
rowSums(sra010153_deByTool)
lista <- rowSums(sra010153_deByTool)
View(lista)
tmp <- consensusList(sra010153_expDef_result ,
sra010153_deByTool,
threshold = 1)
View(tmp)
View(tmp)
View(tmp)
View(tmp$limma$ID)
tmp$limma$ID
sra010153_expDef_result
View(sra010153_expDef_result)
deByTool <- sra010153_deByTool
deByTool$nDE <- rowSums(deByTool)
View(sra010153_deByTool)
View(deByTool)
consensus <- deByTool$nDE >= 1
View(consensus)
consensus <- deByTool$nDE >= 2
consensus <- deByTool$nDE >=0
nrow(sra010153_expDef_result[[2]])
nrow(sra010153_expDef_result[[1]])
nrow(sra010153_expDef_result[[2]])
nrow(sra010153_expDef_result[[3]])
nrow(sra010153_expDef_result[[4]])
nrow(sra010153_expDef_result[[5]])
nrow(sra010153_expDef_result[[6]])
nrow(sra010153_expDef_result[[7]])
nrow(sra010153_expDef_result[[8]])
View(gse95077_expDef_result)
View(sra010153_expDef_result)
todos_nomes <- unlist(lapply(sra010153_expDef_result, rownames))
todos_nomes
for (i in 2:length(lista_df)) {
merged_df <- merge_by_rownames(merged_df, lista_df[[i]])
}
merged_df <- sra010153_expDef_result[1]
View(merged_df)
merged_df <- sra010153_expDef_result[[1]]
for (i in 2:length(sra010153_expDef_result)) {
merged_df <- merge_by_rownames(merged_df, sra010153_expDef_result)
}
for (i in 2:length(sra010153_expDef_result)) {
merged_df <- merge_by_rownames(merged_df, sra010153_expDef_result)
}
for (i in 2:length(sra010153_expDef_result)) {
merged_df <- merge(merged_df, sra010153_expDef_result[[i]], by = "row.names", all = TRUE)
}
View(merged_df)
View(sra010153_expDef_result)
row.names(sra010153_expDef_result$limma) <- sra010153_expDef_result$limma$ID
merged_df <- sra010153_expDef_result[[1]]
View(merged_df)
for (i in 2:length(sra010153_expDef_result)) {
tmp <- merge(merged_df, sra010153_expDef_result[[i]], by = "row.names", all = TRUE)
}
View(tmp)
View(sra010153_cons_result)
frameAllGenes <- function(cons_list, countMatrix){
newList <- list()
tools <- names(cons_list)
i <- 1
for (tool_exp in cons_list) {
result_frame <- as.data.frame(tool_exp)
result_frame$gene_id <- rownames(result_frame)
countMatrix_df <- as.data.frame(countMatrix)
countMatrix_df$gene_id <- rownames(countMatrix_df)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
names(result) <- result$gene_id
result <- result[, !names(result) %in% names(countMatrix_df)]
rownames(result) <- result$gene_id
result <- result[, -which(names(result) == "gene_id")]
newList[[i]] <- result
cat(" - ", i)
i <- i+1
}
names(newList) <- tools
return(newList)
}
new_list <- frameAllGenes(sra010153_cons_result, sra010153_filtered)
newList <- list()
tools <- names(sra010153_cons_result)
i <- 1
for (tool_exp in sra010153_cons_result) {
result_frame <- as.data.frame(tool_exp)
result_frame$gene_id <- rownames(result_frame)
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(countMatrix_df)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
names(result) <- result$gene_id
result <- result[, !names(result) %in% names(countMatrix_df)]
rownames(result) <- result$gene_id
result <- result[, -which(names(result) == "gene_id")]
newList[[i]] <- result
cat(" - ", i)
i <- i+1
}
result_frame <- as.data.frame(sra010153_cons_result$knowseq)
result_frame$gene_id <- rownames(result_frame)
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(countMatrix_df)
result <- merge(countMatrix_df, result_frame,by = "gene_id",all.x = TRUE)
View(result)
row.names(result) <- result$gene_id
result <- result[, !names(result) %in% names(countMatrix_df)]
View(result)
View(result)
rownames(result) <- result$gene_id
result <- result[, -which(names(result) == "gene_id")]
newList[[i]] <- result
cat(" - ", i)
i <- i+1
View(newList)
frameAllGenes <- function(cons_list, countMatrix){
newList <- list()
tools <- names(cons_list)
i <- 1
for (tool_exp in cons_list) {
result_frame <- as.data.frame(tool_exp)
result_frame$gene_id <- rownames(result_frame)
countMatrix_df <- as.data.frame(countMatrix)
countMatrix_df$gene_id <- rownames(countMatrix_df)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
result <- result[, !names(result) %in% names(countMatrix_df)]
rownames(result) <- result$gene_id
result <- result[, -which(names(result) == "gene_id")]
newList[[i]] <- result
cat(" - ", i)
i <- i+1
}
names(newList) <- tools
return(newList)
}
newList <- frameAllGenes(sra010153_cons_result, sra010153_filtered)
View(gse95077_metrics)
View(sra010153_cons_result)
View(sra010153_cons_result[[4]])
View(sra010153_cons_result[[5]])
result_frame <- as.data.frame(sra010153_cons_result[[i]])
result_frame$gene_id <- rownames(result_frame)
View(result_frame)
result_frame <- as.data.frame(sra010153_cons_result$ebseq)
result_frame$gene_id <- rownames(result_frame)
View(result_frame)
frameAllGenes <- function(cons_list, countMatrix){
newList <- list()
tools <- names(cons_list)
i <- 1
for (tool_exp in cons_list) {
result_frame <- as.data.frame(tool_exp)
result_frame$gene_id <- rownames(result_frame)
countMatrix_df <- as.data.frame(countMatrix)
countMatrix_df$gene_id <- rownames(countMatrix_df)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
result <- result[, !names(result) %in% names(countMatrix_df)]
rownames(result) <- result$gene_id
result <- result[, -which(names(result) == "gene_id")]
newList[[i]] <- result
cat(" - ", i, tools[[i]])
i <- i+1
}
names(newList) <- tools
return(newList)
}
newList <- frameAllGenes(sra010153_cons_result, sra010153_filtered)
View(sra010153_cons_result)
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(countMatrix_df)
result <- merge(countMatrix_df, result_frame,by = "gene_id",all.x = TRUE)
rownames(result) <- result$gene_id
result <- result[, !names(result) %in% names(countMatrix_df)]
rownames(result) <- result$gene_id
result <- merge(countMatrix_df, result_frame,by = "gene_id",all.x = TRUE)
View(result)
rownames(result) <- result$gene_id
View(result)
result <- result[, !names(result) %in% names(countMatrix_df)]
result <- merge(countMatrix_df, result_frame,by = "gene_id",all.x = TRUE)
result <- result[, !names(result) %in% names(countMatrix_df)]
result <- merge(countMatrix_df, result_frame,by = "gene_id",all.x = TRUE)
rownames(result) <- result$gene_id
result <- result[, !names(result) %in% names(countMatrix_df)]
result <- merge(countMatrix_df, result_frame,by = "gene_id",all.x = TRUE)
rownames(result) <- result$gene_id
View(result_frame)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
View(result)
result <- result[, !names(result) %in% names(countMatrix_df)]
countMatrix_df <- as.data.frame(countMatrix)
countMatrix_df <- as.data.frame(countMatrix)
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(sra010153_filtered)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
View(result)
result2 <- result[, !names(result) %in% names(countMatrix_df)]
View(result2)
remove(result2)
#rownames(result) <- result$gene_id
result <- result[, -which(row.names(result) == "gene_id")]
View(result)
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(sra010153_filtered)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
rownames(result) <- result$gene_id
View(result)
result <- result[, !names(result) %in% names(countMatrix_df)]
rownames(result) <- result$gene_id
result <- result[, !names(result) %in% "gene_id"]
countMatrix_df$gene_id <- NULL
result <- result[, !names(result) %in% names(countMatrix_df)]
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(sra010153_filtered)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
countMatrix_df$gene_id <- NULL
result <- result[, !names(result) %in% names(countMatrix_df)]
View(result)
rownames(result) <- result$gene_id
result <- result[, -which(names(result) == "gene_id")]
rownames(result) <- result$gene_id
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(sra010153_filtered)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
countMatrix_df$gene_id <- NULL
result <- result[, -which(names(result) == "gene_id")]
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(sra010153_filtered)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
countMatrix_df$gene_id <- NULL
result <- result[, !names(result) %in% names(countMatrix_df)]
result <- result[, -which(names(result) == "gene_id")]
countMatrix_df <- as.data.frame(sra010153_filtered)
countMatrix_df$gene_id <- rownames(sra010153_filtered)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
countMatrix_df$gene_id <- NULL
result <- result[, !names(result) %in% names(countMatrix_df)]
rownames(result) <- result$gene_id
result$gene_id <- NULL
newList[[i]] <- result
cat(" - ", i, tools[[i]])
i <- i+1
frameAllGenes <- function(cons_list, countMatrix){
newList <- list()
tools <- names(cons_list)
i <- 1
for (tool_exp in cons_list) {
result_frame <- as.data.frame(tool_exp)
result_frame$gene_id <- rownames(result_frame)
countMatrix_df <- as.data.frame(countMatrix)
countMatrix_df$gene_id <- rownames(countMatrix_df)
result <- merge(countMatrix_df,
result_frame,
by = "gene_id",
all.x = TRUE)
rownames(result) <- result$gene_id
countMatrix_df$gene_id <- NULL
result <- result[, !names(result) %in% names(countMatrix_df)]
rownames(result) <- result$gene_id
result$gene_id <- NULL
newList[[i]] <- result
cat(" - ", i, tools[[i]])
i <- i+1
}
names(newList) <- tools
return(newList)
}
result <- frameAllGenes(sra010153_cons_result, sra010153_filtered)
View(result)
