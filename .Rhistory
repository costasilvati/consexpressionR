runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "BM")
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "Tissue")
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "Tissue", lcParam = 0)
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "Tissue", lcParam = 0, replicatesParam = "technical")
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
?noiseq
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
library(devtools)
load_all()
load_all()
runConsexpressionTestes()
library(shiny)
runConsexpressionTestes()
roxygenize()
roxygen2::namespace_roclet()
roxygen2::namespace_roclet()
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
View(GSE95077_DE_Tool_sum)
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
consensusList(GSE95077_consexpression2, GSE95077_DE_Tool, 2)
load_all()
consensusList(GSE95077_consexpression2, GSE95077_DE_Tool, 2)
runConsexpressionTestes()
remove(cons_result)
remove(consList)
remove(deByTool)
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
usethis::use_description()
roxygenize()
load_all()
roxygenize()
document()
load_all()
document()
pkgload::dev_help('consexpressionR-package')
runApp('R')
usethis::use_description()
load_all()
consexpressionR()
renv::dependencies()
rsconnect::configureApp("consexpressionR", size="small")
check()
document()
check()
usethis::use_import_from("shiny")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("DESeq2")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("DT")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("UpSetR")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("plotly")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("shiny")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("shinydashboard")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("tximport")
document()
check()
usethis::use_package("tximport", min_version = "1.31.0")
usethis::use_package("shinydashboard", min_version = "0.7.2")
usethis::use_package("shiny", min_version = "1.8.1.1")
usethis::use_package("plotly", min_version = "4.10.4")
usethis::use_package("UpSetR", min_version = "1.4.0")
usethis::use_package("DT", min_version = "0.32")
usethis::use_package("DESeq2",  min_version = "1.43.2")
usethis::use_package("edgeR",  min_version = "4.1.17")
usethis::use_package("EBSeq",  min_version = "2.1.0")
usethis::use_package("samr",  min_version = "3.0")
usethis::use_package("KnowSeq",  min_version = "1.17.0")
usethis::use_package("NOISeq",  min_version = "2.47.0")
usethis::use_package("dplyr",  min_version = "1.1.4")
usethis::use_package("utils",  min_version = "4.4.0")
usethis::use_package("grDevices",  min_version = "4.4.0")
load_all()
document()
check()
library(BiocManager)
options(repos = BiocManager::repositories())
usethis::use_package("knitr", min_version = "1.45")
devtools::build_rmd("vignettes/consexpressionR-vignette.Rmd")
check()
library(devtools)
load_all()
df <- readCountFile(tableCountPath="data/table_count_df.csv",
split=",")
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicModel)
df <- readCountFile(tableCountPath="data/table_count_df.csv", split=",")
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicsModel)
toolResult <- NULL
toolResult$deseq2 <- runEbseq(countMatrix = df,designExperiment = designExperimentModel)
df <- readCountFile(tableCountPath="data/table_count_df.csv", split=",")
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicsModel)
toolResult <- NULL
toolResult$deseq2 <- runEbseq(countMatrix = as.matrix(df),designExperiment = designExperimentModel)
load_all()
df <- readCountFile(tableCountPath="data/table_count_df.csv",split=",")
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicsModel)
toolResult <- NULL
toolResult$edger <- runEdger(countMatrix = df,
numberReplics = numberReplicsModel,
desingExperiment = designExperimentModel )
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicsModel)
toolResult <- NULL
toolResult$knowSeq <- runLimma(countMatrix = df,
numberReplics = numberReplicsModel,
designExperiment = designExperimentModel)
View(toolResult)
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicsModel)
toolResult <- NULL
toolResult$limma <- runLimma(countMatrix = df,
designExperiment = designExperimentModel)
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicsModel)
toolResult <- NULL
toolResult$limma <- runLimma(countMatrix = df,
numberReplics = numberReplicsModel,
designExperiment = designExperimentModel)
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
toolResult <- NULL
toolResult$knowSeq <- runKnowSeq(countMatrix = df,
groupName = groupNameModel,
numberReplic = numberReplicsModel)
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicsModel)
toolResult <- NULL
toolResult$noiseq <- runNoiSeq(countMatrix = df,
designExperiment = designExperimentModel)
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
designExperimentModel <- rep(groupNameModel, each = numberReplicsModel)
toolResult <- NULL
toolResult$samseq <- runSamSeq(countMatrix = df,
designExperiment = designExperimentModel)
devtools::check()
document()
load_all()
document()
devtools::check()
devtools::document()
?runDeseq2
usethis::use_package("stringr",  min_version = "1.5.1")
usethis::use_package("knitr", min_version = "1.45")
usethis::use_package("utils", min_version = "4.4.0")
usethis::use_package("stringr",  min_version = "1.5.1")
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
toolResult <- NULL
toolResult$knowSeq <- runKnowSeq(countMatrix = df,
groupName = groupNameModel,
numberReplic = numberReplicsModel)
devtools::load_all()
devtools::load_all()
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
toolResult <- NULL
toolResult$knowSeq <- runKnowSeq(countMatrix = df,
groupName = groupNameModel,
numberReplic = numberReplicsModel)
devtools::check()
devtools::load_all()
usethis::use_package("knitr", min_version = "1.45")
devtools::document()
devtools::load_all()
devtools::check()
library(KnowSeq)
renv::dependencies()
devtools::load_all()
devtools::check()
?runKnowSeq
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
groupNameModel = c("BM","JJ")
numberReplicsModel = 3
toolResult <- NULL
toolResult$knowSeq <- runKnowSeq(countMatrix = df,
groupName = groupNameModel,
numberReplic = numberReplicsModel)
devtools::run_examples()
devtools::load_all()
devtools::run_examples()
devtools::load_all()
devtools::document()
devtools::run_examples()
devtools::load_all()
devtools::document()
devtools::run_examples()
devtools::document()
devtools::load_all()
devtools::run_examples()
devtools::load_all()
devtools::document()
devtools::run_examples()
devtools::load_all()
devtools::document()
devtools::run_examples()
devtools::check()
BiocManager::install()
devtools::load_all()
consexpressionR()
devtools::load_all()
consexpressionR()
runApp('R')
runApp('R')
devtools::load_all()
consexpressionR()
pkgload::dev_help('consexpressionR-package')
consexpressionR()
library(devtools)
devtools::load_all()
consexpressionR()
BiocManager::valid()
devtools::document()
renv::dependencies()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
library(KnowSeq)
?DEGsExtraction
devtools::load_all()
consexpressionR()
devtools::load_all()
consexpressionR()
countMatrix <- as.matrix(table_count_df)
typeof(countMatrix)
matriz_num <- apply(countMatrix, 2, function(x) as.numeric(x))
typeof(matriz_num)
view(matriz_num)
View(matriz_num)
view(countMatrix)
countMatrix <- as.matrix(table_count_df)
View(countMatrix)
countMatrix <- as.matrix(load("data/table_count_df.rda"))
View(countMatrix)
load("data/table_count_df.rda")
countMatrix <- table_count_df
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
df <- as.matrix(readCountFile(tableCountPath="data/table_count_df.csv",split=","))
remove(df, countMatrix)
remove(table_count_df)
remove(matriz_num)
use_mit_license()
usethis::use_testthat(3)
library(testthat)
library(consexpressionR)
test_check("consexpressionR")
devtools::test()
library(testthat)
library(consexpressionR)
test_check("consexpressionR")
usethis::use_r("createNameFileOutput")
usethis::use_test()
load("data/table_count_df.rda")
usethis::use_data(table_count_df)
usethis::use_data(table_count_df, overwrite = TRUE)
library(consexpressionR)
system.file("extdata", package = "consexpressionR") |> list.files()
system.file("extdata", "table_count_df.csv", package = "consexpressionR")
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
system.file("extdata", "table_count_df.csv", package = "consexpressionR")
system.file("extdata", package = "consexpressionR")
usethis::use_data_raw(name="df")
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::build()
devtools::document()
devtools::load_all()
devtools::document()
teste <- system.file("extdata", gse95077.csv)
teste <- system.file("extdata", gse95077.csv, "consexpressionR")
library(consexpressionR)
teste <- system.file("extdata", gse95077.csv, "consexpressionR")
devtools::load_all()
devtools::install()
library(consexpressionR)
teste <- system.file("extdata", gse95077.csv, "consexpressionR")
teste <- system.file("extdata", "gse95077.csv", "consexpressionR")
teste <- system.file("extdata", "gse95077.rda", "consexpressionR")
teste <- system.file("extdata", "gse95077", "consexpressionR")
library(devtools)
devtools::load_all()
gse95077 <- table_count_df
usethis::use_data(gse95077)
teste <- system.file("data", "gse95077", "consexpressionR")
system.file("data", "gse95077", "consexpressionR")
devtools::load_all()
library(consexpressionR)
consexpressionR::gse95077
remove(gse95077)
consexpressionR::gse95077
devtools::load_all()
devtools::run_examples()
search()
devtools::load_all()
devtools::document()
loadNamespace()
loadNamespace(package = "consexpressionR")
library(devtools)
devtools::check()
devtools::load_all()
devtools::check()
library(cqn)
cqn::rq
library(quantreg)
usethis::use_package("quanterg")
devtools::load_all()
install.packages("~/Downloads/quantreg_5.97.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/quantreg_5.97.tgz", repos = NULL, type = .Platform$pkgType)
usethis::use_package("quanterg")
library(quantreg)
usethis::use_package("quanterg")
devtools::load_all()
usethis::use_package("quanterg")
devtools::load_all()
devtools::check()
devtools::check()
devtools::load_all()
devtools::load_all()
install.packages("quantreg")
library(quantreg)
devtools::load_all()
library(quanterg)
install.packages("quanterg")
usethis::use_package("quantreg")
library(quantreg)
devtools::load_all()
devtools::check()
library(cqn)
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
usethis::use_package("cqn")
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::check()
devtools::load_all()
consexpressionR()
devtools::load_all()
consexpressionR()
consexpressionR::consexpressionR()
install.packages(c("roxygen2", "pkgdown", "bookdown", "rmarkdown"))
library(pkgload)
library(pkgdown)
build_site()
consexpressionR::consexpressionR()
library(quantreg)
library(mclust)
consexpressionR::consexpressionR()
library(quantreg)
library(mclust)
devtools::load_all()
consexpressionR::consexpressionR()
devtools::load_all()
consexpressionR::consexpressionR()
devtools::load_all()
consexpressionR::consexpressionR()
devtools::load_all()
consexpressionR::consexpressionR()
usethis::use_package("DESeq2",  min_version = "1.38.3")
usethis::use_package("DESeq2",  min_version = "1.38.3")
devtools::load_all()
devtools::load_all()
devtools::load_all()
consexpressionR::consexpressionR()
consexpressionR::consexpressionR()
source_dir(../R)
source_dir("../R"")
source_dir("../R")
source_dir("R")
system.file()
system.file("consexpressionR")
list.files(path = ".", pattern = "\\.R$")
list.files(path = "../", pattern = "\\.R$")
list.files(path = ".", pattern = "\\.R$")
list.files(path = "R/", pattern = "\\.R$")
library(remotes)
remotes::install_github("ThinkR-open/golem")
