load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
View(df)
library(devtools)
load_all()
runConsexpressionTestes()
library(shiny)
library(shinyFiles)
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
?edgeR::exactTest()
View(df)
runEdger(df, 3, c("BB", "BB", "BB", "JJ", "JJ", "JJ"))
?edgeR::calcNormFactors
load_all()
load_all()
runEdger(df, 3, c("BB", "BB", "BB", "JJ", "JJ", "JJ"))
load_all()
runEdger(df, 3, c("BB", "BB", "BB", "JJ", "JJ", "JJ"))
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
library(devtools)
library(shiny)
library(shinyFiles)
library(fs)
load_all()
runConsexpressionTestes()
?numericInput
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
?stats::p.adjust
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
usethis::use_import_from("shinyWidgets", "toolTipText")
load_all()
usethis::use_import_from("shinyWidgets", "toolTipText")
runConsexpressionTestes()
usethis::use_import_from("shinyWidgets", "tooltipText")
load_all()
runConsexpressionTestes()
library(shinyWidgets)
load_all()
runConsexpressionTestes()
usethis::use_import_from("tipify", "tipfy")
install.packages("tipify")
install.packages("tipify", force=TRUE)
shinyWidgetsGallery()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
library(devtools)
load_all()
library(shiny)
library(shinyFiles)
library(fs)
runConsexpressionTestes()
library(NOISeq)
?noiseq
load_all()
runConsexpressionTestes()
View(GSE95077_consexpression2)
View(GSE95077_consexpression2[["noiseq"]])
NOISeq::degenes(GSE95077_consexpression2$noiseq, q= 0.8, M=NULL)
myfactors = data.frame(Tissue=c(designExperiment))
myfactors = data.frame(Tissue=c(designExperimentModel))
mydata <- NOISeq::readData(data=countMatrix, factors=myfactors)
myfactors = data.frame(Tissue=c(designExperimentModel))
mydata <- NOISeq::readData(data=GSE95077_filtered_BMJJ, factors=myfactors)
mynoiseq = NOISeq::noiseq(mydata,
norm = "rpkm",
k= 0.5,
factor="Tissue",
lc= 0,
replicates="technical")
noiseqRsult <- NOISeq::degenes(mynoiseq, q= 0.8, M=NULL)
View(GSE95077_deList)
View(GSE95077_deList[["noiseq"]])
View(noiseqRsult)
View(GSE95077_deList[["noiseq"]])
load_all()
runConsexpressionTestes()
library(samr)
?SAMseq
runSAM()
runSAM()
library(devt)
library(devtools)
load_all()
runConsexpressionTestes()
library(shiny)
library(shinyjs)
library(shinyFiles)
library(fs)
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
library(KnowSeq)
?DEGsExtraction
toolResult$knowSeq <- runKnowSeq(countMatrix = df,
groupName = groupNameModel,
numberReplic = numberReplicsModel)
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df)),
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel)
View(toolResult)
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id",)
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id")
View(toolResult)
toolResult[["knowSeq"]]
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
attributes = attributes,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id")
load_all()
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
attributes = attributes,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id")
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id")
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id")
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id", notSapiens = TRUE)
View(toolResult)
View(toolResult[["knowSeq"]])
load_all()
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id", notSapiens = TRUE)
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "entrezgene_id")
View(toolResult)
runConsexpressionTestes()
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "external_gene_name")
View(toolResult)
toolResult$knowSeq <- runKnowSeq(countMatrix = as.matrix(df),
groupName = groupNameModel,
numberReplic = numberReplicsModel,
filterId = "percentage_gene_gc_content")
View(toolResult)
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
library(devtools)
library(shiny)
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
library(EBSeq)
?EBTest
?GetDEResults
?EBTest
load_all()
?EBTest
runConsexpressionTestes()
View(GSE95077_consexpression2)
View(GSE95077_consexpression2[["ebseq"]])
?EBTest
load_all()
View(GSE95077_consexpression2[["ebseq"]])
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
resultTool$knowseq <- runKnowSeq(as.matrix(df),
groupName = c("cb","jj"),
numberReplic = 3,
filterId = "ensembl_gene_id",
notSapiens = FALSE)
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
runNoiSeq(df, c("cb", "jj"))
runNoiSeq(df, designExperimentModel
)
runNoiSeq(df, designExperimentModel, normParm = "rpkm")
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5)
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "cb")
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "BM")
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "Tissue")
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "Tissue", lcParam = 0)
runNoiSeq(df, designExperimentModel, normParm = "rpkm", kParam = 0.5, factorParam = "Tissue", lcParam = 0, replicatesParam = "technical")
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
?noiseq
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
library(devtools)
load_all()
load_all()
runConsexpressionTestes()
library(shiny)
runConsexpressionTestes()
roxygenize()
roxygen2::namespace_roclet()
roxygen2::namespace_roclet()
load_all()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
View(GSE95077_DE_Tool_sum)
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
consensusList(GSE95077_consexpression2, GSE95077_DE_Tool, 2)
load_all()
consensusList(GSE95077_consexpression2, GSE95077_DE_Tool, 2)
runConsexpressionTestes()
remove(cons_result)
remove(consList)
remove(deByTool)
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
load_all()
runConsexpressionTestes()
usethis::use_description()
roxygenize()
load_all()
roxygenize()
document()
load_all()
document()
pkgload::dev_help('consexpressionR-package')
runApp('R')
usethis::use_description()
load_all()
consexpressionR()
renv::dependencies()
rsconnect::configureApp("consexpressionR", size="small")
check()
document()
check()
usethis::use_import_from("shiny")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("DESeq2")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("DT")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("UpSetR")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("plotly")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("shiny")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("shinydashboard")
# 'DESeq2', 'DT', 'UpSetR', 'plotly', 'shiny', 'shinydashboard',
'tximport'
usethis::use_package("tximport")
document()
check()
usethis::use_package("tximport", min_version = "1.31.0")
usethis::use_package("shinydashboard", min_version = "0.7.2")
usethis::use_package("shiny", min_version = "1.8.1.1")
usethis::use_package("plotly", min_version = "4.10.4")
usethis::use_package("UpSetR", min_version = "1.4.0")
usethis::use_package("DT", min_version = "0.32")
usethis::use_package("DESeq2",  min_version = "1.43.2")
usethis::use_package("edgeR",  min_version = "4.1.17")
usethis::use_package("EBSeq",  min_version = "2.1.0")
usethis::use_package("samr",  min_version = "3.0")
usethis::use_package("KnowSeq",  min_version = "1.17.0")
usethis::use_package("NOISeq",  min_version = "2.47.0")
usethis::use_package("dplyr",  min_version = "1.1.4")
usethis::use_package("utils",  min_version = "4.4.0")
usethis::use_package("grDevices",  min_version = "4.4.0")
load_all()
document()
check()
library(BiocManager)
options(repos = BiocManager::repositories())
usethis::use_package("knitr", min_version = "1.45")
devtools::build_rmd("vignettes/consexpressionR-vignette.Rmd")
check()
