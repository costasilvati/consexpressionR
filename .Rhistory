labels = designExperiment,
outdir = "knowSeq-report",
qualityAnalysis = FALSE,
batchEffectTreatment = FALSE,
geneOntology = FALSE,
getPathways = FALSE,
getDiseases = FALSE,
maxGenes = dim(SRA010153_filtred)[1])
library(KnowSeq)
knowSeq_SRA <- knowseqReport(data = SRA010153_filtred,
labels = designExperiment,
outdir = "knowSeq-report",
qualityAnalysis = FALSE,
batchEffectTreatment = FALSE,
geneOntology = FALSE,
getPathways = FALSE,
getDiseases = FALSE,
maxGenes = dim(SRA010153_filtred)[1])
knowSeq_SRA <- knowseqReport(data = as.matrix(SRA010153_filtred),
labels = designExperiment,
outdir = "knowSeq-report",
qualityAnalysis = FALSE,
batchEffectTreatment = FALSE,
geneOntology = FALSE,
getPathways = FALSE,
getDiseases = FALSE,
maxGenes = dim(SRA010153_filtred)[1])
source("/Volumes/SD128/GitHub/consexpression2/R/runConsexpression2.R", echo=TRUE)
knowSeq <- DEGsExtraction(expressionMatrix = SRA010153_filtred, labels = designExperiment, CV = FALSE)
knowSeq <- DEGsExtraction(expressionMatrix = as.matrix(SRA010153_filtred), labels = designExperiment, CV = FALSE)
View(knowSeq)
knowSeq[["DEG_Results"]]
knowSeq <- DEGsExtraction(expressionMatrix = as.matrix(SRA010153_filtred), labels = designExperiment, lfc = 2.0, pvalue = 0.05, number = Inf)
myAnnotation <- getGenesAnnotation(row.names(GSE95077_filtered), filter="ensembl_gene_id",notHSapiens=FALSE)
View(myAnnotation)
expValue <- calculateGeneExpressionValues(countsMatrix = as.matrix(GSE95077_filtered), annotation = myAnnotation, notHuman = TRUE, Ensembl_ID = TRUE)
expValue <- calculateGeneExpressionValues(countsMatrix = as.matrix(GSE95077_filtered), annotation = myAnnotation, genesNames = TRUE)
View(expValue)
expValue <- calculateGeneExpressionValues(countsMatrix = as.matrix(GSE95077_filtered), annotation = myAnnotation, genesNames = FALSE)
View(expValue)
GSE95077_knowSeq <- DEGsExtraction(expValue, labels = rep(c("BM", "JJ", "TG"), each=6), lfc = 2.0, pvalue = 0.05)
GSE95077_knowSeq <- DEGsExtraction(expValue, labels = rep(c("BM", "JJ", "TG"), each=6))
View(GSE95077_knowSeq)
GSE95077_knowSeq[["DEG_Results"]]
View(GSE95077_knowSeq[["DEG_Results"]][["DEGs_Matrix"]])
View(GSE95077_knowSeq[["DEG_Results"]][["MulticlassLFC"]])
GSE95077_knowSeq$Table
View(GSE95077_knowSeq$DEG_Results$DEGs_Matrix)
View(GSE95077_knowSeq$DEG_Results$DEGs_Table)
View(GSE95077_knowSeq$DEG_Results$DEGs_Table$rank)
View(GSE95077_knowSeq$DEG_Results$DEGs_Table$coefficients)
View(GSE95077_knowSeq$DEG_Results$DEGs_Table$F.p.value)
GSE95077_knowSeq$DEG_Results$DEGs_Table$F.p.value
GSE95077_knowSeq$DEG_Results$DEGs_Table$t
myAnnotation <- getGenesAnnotation(row.names(countMatrix),
filter="ensembl_gene_id")
myAnnotation <- getGenesAnnotation(row.names(GSE95077_filtered), filter="ensembl_gene_id")
View(GSE95077_knowSeq$DEG_Results$DEGs_Table$coefficients)
GSE95077_knowSeq$DEG_Results$DEGs_Table$t
GSE95077_knowSeq <- DEGsExtraction(expValue, labels = rep(c("BM", "JJ", "TG"), each=6), number = Inf)
GSE95077_knowSeq$DEG_Results$DEGs_Table
View(GSE95077_knowSeq)
View(GSE95077_knowSeq[["DEG_Results"]][["DEGs_Table"]])
GSE95077_knowSeq[["DEG_Results"]][["DEGs_Table"]][["s2.post"]]
library(devtools)
load_all()
remove(runConsexpression2())
remove(runConsexpression2
)
load_all()
install.packages(nlme)
install.packages(DT)
install.packages("nlme")
library(DT)
library(KnowSeq)
devtools::load_all()
devtools::load_all()
k < runKnowSeq(SRA010153_filtred, c("UHR","Brain"), 7, "data/knowSeq-report")
k <- runKnowSeq(SRA010153_filtred, c("UHR","Brain"), 7, "data/knowSeq-report")
devtools::load_all()
k <- runKnowSeq(SRA010153_filtred, c("UHR","Brain"), 7, "data/knowSeq-report")
myAnnotation <- getGenesAnnotation(row.names(countMatrix),
filter="ensembl_gene_id")
expValue <- calculateGeneExpressionValues(countsMatrix = as.matrix(countMatrix),
annotation = myAnnotation,
genesNames = FALSE)
devtools::load_all()
devtools::load_all()
k <- runKnowSeq(SRA010153_filtred, c("UHR","Brain"), 7, "data/knowSeq-report")
check()
devtools::check()
devtools::check()
devtools::check()
detach("package:BiocParallel", unload = TRUE)
consexpression2::use_data()
usethis::use_data()
load_all()
library(devtools)
load_all()
k <- runKnowSeq(as.matrix(SRA010153_filtred), c("UHR","Brain"), 7, "data/knowSeq-report")
View(k)
k$DEG_Results$DEGs_Table
View(k$DEG_Results$DEGs_Table)
View(k$DEG_Results$DEGs_Table)
devtools::check()
devtools::check()
load_all()
GSE95077_consexpression2 <- consexpression2(6, c("BM", "JJ", "TG"))
write.csv(GSE95077_filtered, file = "data/GSE05077_filtred.csv")
write.csv(SRA010153_filtred, file = "SRA010153_filtred.csv")
GSE95077_consexpression2 <- consexpression2(numberReplics = 6,
groupName = c("BM", "JJ", "TG"),
tableCountPath = "data/GSE95077_filtred.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
write.csv(SRA010153_filtred, file = "SRA010153_filtred.csv")
write.csv(SRA010153_filtred, file = "data/SRA010153_filtred.csv")
GSE95077_consexpression2 <- consexpression2(numberReplics = 6,
groupName = c("BM", "JJ", "TG"),
tableCountPath = "/Volumes/SD128/GitHub/consexpression2/data/GSE95077_filtred.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
GSE95077_consexpression2 <- consexpression2(numberReplics = 6,
groupName = c("BM", "JJ", "TG"),
tableCountPath = "data/GSE95077_filtred.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 6,
groupName = c("BM", "JJ", "TG"),
tableCountPath = "data/GSE95077_filtred.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
myfactors = data.frame(Condition = c(rep("JJ", 3), rep("BM",3)))
mydata <- NOISeq::readData(data=GSE95077_filtered, factors=myfactors)
myfactors = data.frame(Condition = c(rep("JJ", 3), rep("BM",3),rep("JJ", 3)))
mydata <- NOISeq::readData(data=GSE95077_filtered, factors=myfactors)
myfactors = data.frame(Condition = c(rep("JJ", 6), rep("BM",6),rep("JJ", 6)))
mydata <- NOISeq::readData(data=GSE95077_filtered, factors=myfactors)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 6,
groupName = c("BM", "JJ", "TG"),
tableCountPath = "data/GSE95077_filtred.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
myfactors = data.frame(Condition = c(rep("JJ", 6), rep("BM",6)))
mydata <- NOISeq::readData(data=GSE95077_filtered, factors=myfactors)
indexCoupleGroupToCompare = c(1,2)
seq(indexCoupleGroupToCompare[1]: indexCoupleGroupToCompare[1]+6)
seq(indexCoupleGroupToCompare[1]: indexCoupleGroupToCompare[1]+(6-1))
seq(indexCoupleGroupToCompare[2]: indexCoupleGroupToCompare[2]+(6-1))
indexCoupleGroupToCompare[2]
seq(indexCoupleGroupToCompare[2]: indexCoupleGroupToCompare[2]+(6-1))
seq(2, 10)
seq(indexCoupleGroupToCompare[2]*6: (indexCoupleGroupToCompare[2]*6)+(6-1))
indexCoupleGroupToCompare[2]*6
(indexCoupleGroupToCompare[2]*6)+(6-1)
(indexCoupleGroupToCompare[2]*6)+6
seq(6:12)
seq()
?seq()
seq(from=indexCoupleGroupToCompare[2]*6: to=(indexCoupleGroupToCompare[2]*6)+6)
seq(from=indexCoupleGroupToCompare[2]*6, to=(indexCoupleGroupToCompare[2]*6)+6)
seq(from=indexCoupleGroupToCompare[2]*6, along.wwith= 6)
seq(from=indexCoupleGroupToCompare[2]*6, along.with= 6)
seq(from=indexCoupleGroupToCompare[2]*6, length.out= 6)
seq(from=indexCoupleGroupToCompare[2]*6, length.out= 6+1)
remove <- c(seq(from=indexCoupleGroupToCompare[1]*6, length.out= 6+1),
seq(from=indexCoupleGroupToCompare[2]*6, length.out= 6+1)
)
remove <- c(seq(from=indexCoupleGroupToCompare[1], length.out= 6+1),
seq(from=indexCoupleGroupToCompare[2]*6, length.out= 6+1)
)
remove <- c(seq(from=(indexCoupleGroupToCompare[1]*6)-6, to=indexCoupleGroupToCompare[1]*6),
seq(from=(indexCoupleGroupToCompare[2]*6), to=indexCoupleGroupToCompare[2]*6)
)
remove
remove <- c(seq(from=(indexCoupleGroupToCompare[1]*6)-6, to=indexCoupleGroupToCompare[1]*6),
seq(from=(indexCoupleGroupToCompare[2]*6), to=indexCoupleGroupToCompare[2]*6)
remove <- c(seq(from=(indexCoupleGroupToCompare[1]*6)-6, to=indexCoupleGroupToCompare[1]*6),
remove <- c(seq(from=(indexCoupleGroupToCompare[1]*6)-6, to=indexCoupleGroupToCompare[1]*6),
seq(from=(indexCoupleGroupToCompare[2]*6)-6, to=indexCoupleGroupToCompare[2]*6))
)
remove <- c(seq(from=(indexCoupleGroupToCompare[1]*6)-6, to=indexCoupleGroupToCompare[1]*6),
seq(from=(indexCoupleGroupToCompare[2]*6)-6, to=indexCoupleGroupToCompare[2]*6))
remove
remove <- c(seq(from=(indexCoupleGroupToCompare[1]*6)-(6-1), to=indexCoupleGroupToCompare[1]*6),
seq(from=(indexCoupleGroupToCompare[2]*6)-(6-1), to=indexCoupleGroupToCompare[2]*6))
remove
indexCoupleGroupToCompare <- c(1,3)
remove <- c(seq(from=(indexCoupleGroupToCompare[1]*6)-(6-1), to=indexCoupleGroupToCompare[1]*6),
seq(from=(indexCoupleGroupToCompare[2]*6)-(6-1), to=indexCoupleGroupToCompare[2]*6))
remove
remove(remove, mydata, myfactors, expValue, k, metadata, knowSeq)
newGse <- subset(GSE95077_filtered, select = colunas_selecionadas)
columnTreats <- c(seq(from=(indexGroupCompare[1]*numberReplic)-(numberReplic-1),
to=indexGroupCompare[1]*numberReplic),
seq(from=(indexGroupCompare[2]*numberReplic)-(numberReplic-1),
to=indexGroupCompare[2]*numberReplic)
)
indexGroupCompare <- indexCoupleGroupToCompare
columnTreats <- c(seq(from=(indexGroupCompare[1]*numberReplic)-(numberReplic-1),
to=indexGroupCompare[1]*numberReplic),
seq(from=(indexGroupCompare[2]*numberReplic)-(numberReplic-1),
to=indexGroupCompare[2]*numberReplic)
)
numberReplic <- 6
columnTreats <- c(seq(from=(indexGroupCompare[1]*numberReplic)-(numberReplic-1),
to=indexGroupCompare[1]*numberReplic),
seq(from=(indexGroupCompare[2]*numberReplic)-(numberReplic-1),
to=indexGroupCompare[2]*numberReplic)
)
newGse <- subset(GSE95077_filtered, select = colunas_selecionadas)
newGse <- subset(GSE95077_filtered, select = columnTreats)
View(newGse)
indexGroupCompare <- c(1,2)
columnTreats <- c(seq(from=(indexGroupCompare[1]*numberReplic)-(numberReplic-1),
to=indexGroupCompare[1]*numberReplic),
seq(from=(indexGroupCompare[2]*numberReplic)-(numberReplic-1),
to=indexGroupCompare[2]*numberReplic)
)
newGse <- subset(GSE95077_filtered, select = columnTreats)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 6,
groupName = c("BM", "JJ", "TG"),
tableCountPath = "data/GSE95077_filtred.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 6,
groupName = c("BM", "JJ", "TG"),
tableCountPath = "data/GSE95077_filtred.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 6,
groupName = c("BM", "JJ", "TG"),
tableCountPath = "data/GSE95077_filtred.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
ebOut = EBMultiTest(Data=GSE95077_filtered,
Conditions=as.factor(rep(groupName, each=numberReplic)),
uc = 2,
sizeFactors=sizes)
sizes<- EBSeq::MedianNorm(GSE95077_filtered)
ebOut <- EBSeq::EBMultiTest(Data=GSE95077_filtered,
Conditions=as.factor(rep(groupName, each=numberReplic)),
uc = 2,
sizeFactors=sizes)
ebOut <- EBSeq::EBMultiTest(Data=GSE95077_filtered,
Conditions=as.factor(rep(c("BM", "JJ", "TG"), each=numberReplic)),
uc = 2,
sizeFactors=sizes)
ebOut <- EBSeq::EBMultiTest(Data= as.matrix(GSE95077_filtered),
Conditions=as.factor(rep(c("BM", "JJ", "TG"), each=numberReplic)),
uc = 2,
sizeFactors=sizes)
r <- EBSeq::GetMultiPP(ebOut)
View(r)
r$PP
r$MAP
r$Patterns
View(ebOut)
View(GSE95077_filtered)
GSE95077_filtered_BMJJ <- subset(GSE95077_filtered, select = c(4,5,6,10,11,12))
save(GSE95077_filtered_BMJJ, file = "/Volumes/SD128/consexpression2_testesOutput/data/GSE95077_filtred_BMJJ.RData")
remove(ebOut, GSE95077_filtered, GSE95077_knowSeq, myAnnotation, newGse, r, columnTreats, designExperiment, indexCoupleGroupToCompare, indexGroupCompare, knowSeq_SRA, sizes)
save(GSE95077_filtered_BMJJ, file = "data/GSE95077_BMJJ.RData")
remove(countMatrix)
numberReplic = 3
groupName = c("BM", "JJ")
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 3,
groupName = c("BM", "JJ"),
tableCountPath = "data/GSE95077_filtred2.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
write.csv(GSE95077_filtered_BMJJ, file = "data/GSE95077_filtred2.csv")
GSE95077_consexpression2 <- consexpression2(numberReplics = 3,
groupName = c("BM", "JJ"),
tableCountPath = "data/GSE95077_filtred2.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
for (data in resultTool) { cat(names(data))}
for (data in GSE95077_consexpression2) { cat(names(data))}
for (data in GSE95077_consexpression2) { cat(names(GSE95077_consexpression2),"\n")}
names(GSE95077_consexpression2)[1]
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 3,
groupName = c("BM", "JJ"),
tableCountPath = "data/GSE95077_filtred2.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 3,
groupName = c("BM", "JJ"),
tableCountPath = "data/GSE95077_filtred2.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
tableCountPath = "data/SRA010153_filtred.csv",
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
tableCount <- utils::read.csv("data/SRA010153_filtred.csv",
sep=",",
row.names=1,
header=TRUE,
stringsAsFactors=FALSE)
tableCount <- utils::read.csv("data/GSE95077_filtred2.csv",
sep=",",
row.names=1,
header=TRUE,
stringsAsFactors=FALSE)
write.csv(SRA010153_filtred, file = "SRA010153_filtred.csv")
tableCount <- utils::read.csv("data/SRA010153_filtred.csv",
sep=",",
row.names=1,
header=TRUE,
stringsAsFactors=FALSE)
write.csv(SRA010153_filtred, file = "data/SRA010153_filtred.csv")
tableCount <- utils::read.csv("data/SRA010153_filtred.csv",
sep=",",
row.names=1,
header=TRUE,
stringsAsFactors=FALSE)
View(SRA010153_filtred)
load_all()
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
rDataFrameCount = SRA010153_filtred,
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 3,
groupName = c("BM", "JJ"),
tableCountPath = "data/GSE95077_filtred2.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 3,
groupName = c("BM", "JJ"),
tableCountPath = "data/GSE95077_filtred2.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
load_all()
GSE95077_consexpression2 <- consexpression2(numberReplics = 3,
groupName = c("BM", "JJ"),
tableCountPath = "data/GSE95077_filtred2.csv",
sepCharacter = ",",
experimentName = "GSE95077",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
tableCountPath = "data/SRA010153_filtred.csv",
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
tableCountPath = "data/SRA010153_filtred.csv",
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
View(SRA010153_filtred)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
tableCountPath = "data/SRA010153_filtred.csv",
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
tableCountPath = "data/SRA010153_filtred.csv",
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
library(readr)
SRA010153_filtred2 <- read_csv("data/SRA010153_filtred.csv")
View(SRA010153_filtred2)
row.names(SRA010153_filtred2) <- SRA010153_filtred2$Gene
if (any(is.na(SRA010153_filtred$Gene))) {
print("Existem valores NA na coluna Gene!")
} else {
print("Não há valores NA na coluna Gene.")
}
summary(SRA010153_filtred)
summary(row.names(SRA010153_filtred))
boxplot(row.names(SRA010153_filtred))
boxplot(row.names(SRA010153_filtred2$Gene))
boxplot(row.names(SRA010153_filtred2$Gene))
if (any(is.na(SRA010153_filtred$Gene))) {
print("Existem valores NA na coluna Gene!")
} else {
print("Não há valores NA na coluna Gene.")
}
if (any(is.na(SRA010153_filtred2$Gene))) {
print("Existem valores NA na coluna Gene!")
} else {
print("Não há valores NA na coluna Gene.")
}
indices_na <- grep("NA", SRA010153_filtred2[1:ncol(SRA010153_filtred2)])
# Imprime os índices das linhas com NA
print(indices_na)
SRA010153_filtred2 <- utils::read.csv("data/SRA010153_filtred2.csv",
sep=",",
row.names=1,
header=TRUE,
stringsAsFactors=FALSE)
SRA010153_filtred2 <- utils::read.csv("data/SRA010153_filtred.csv",
sep=",",
row.names=1,
header=TRUE,
stringsAsFactors=FALSE)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
tableCountPath = "data/SRA010153_filtred.csv",
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
remove(SRA010153_filtred2)
SRA010153_filtred <- readCountFile("data/SRA010153_filtred.csv", split = ",")
SRA010153_deList <- expressionDefinition(SRA010153_consexpression2)
GSE95077_deList <- expressionDefinition(GSE95077_consexpression2)
View(GSE95077_deList)
GSE95077_deList <- expressionDefinition(GSE95077_consexpression2)
View(GSE95077_consexpression2)
knowseqDe <- dplyr::filter(GSE95077_consexpression2$knowseq,
((logFC <= -2  | logFC >= 2) & (P.Value >=0.05)))
knowseqDe <- dplyr::filter(GSE95077_consexpression2$knowseq,
((logFC <= -10  | logFC >= 0) ))
knowseqDe <- dplyr::filter(GSE95077_consexpression2$knowseq,
((logFC <= -2  | logFC >= 2) & (`P.Value` >=0.05)))
View(GSE95077_consexpression2[["knowseq"]])
remove(data, knowseqDe, tableCount)
View(SRA010153_deList)
load_all()
SRA010153_deList <- expressionDefinition(SRA010153_consexpression2)
View(SRA010153_deList)
View(SRA010153_consexpression2$limma)
SRA010153_deList <- expressionDefinition(SRA010153_consexpression2)
colnames(SRA010153_deList$limmaDe)
load_all()
SRA010153_deList <- expressionDefinition(SRA010153_consexpression2)
View(SRA010153_deList)
load_all()
SRA010153_deList <- expressionDefinition(SRA010153_consexpression2)
load_all()
SRA010153_deList <- expressionDefinition(SRA010153_consexpression2)
View(SRA010153_consexpression2)
-19038 <= -2
View(SRA010153_consexpression2$knowseq)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
tableCountPath = "",
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
rDataCount = rev(SRA010153_filtred),
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
SRA010153_consexpression2 <- consexpression2(numberReplics = 7,
groupName = c("UHR", "Brain"),
rDataFrameCount = rev(SRA010153_filtred),
sepCharacter = ",",
experimentName = "SRA010153",
outDirPath = "/Volumes/SD128/consexpression2_testesOutput/",
printResults = TRUE)
SRA010153_deList <- expressionDefinition(SRA010153_consexpression2)
