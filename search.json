[{"path":"https://costasilvati.github.io/consexpressionR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 consexpressionR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juliana Costa-Silva. Author, maintainer. David Menotti. Author. Fabricio M. Lopes. Author.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Costa-Silva, J., Menotti, D., Lopes, M. F. consexpressionR: R package consensus differential gene expression analysis arxiv (2025)","code":"@Article{,   title = {consexpressionR: an R package for consensus differential gene expression analysis},   author = {Juliana Costa-Silva and David Menotti and Fabricio M. Lopes},   year = {2025},   journal = {arxiv},   doi = {10.48550/arXiv.2503.21546}, }"},{"path":"https://costasilvati.github.io/consexpressionR/index.html","id":"consexpressionr","dir":"","previous_headings":"","what":"Differential Expression Analysis using consensus of 7 methods","title":"Differential Expression Analysis using consensus of 7 methods","text":"R package consexpressionR R package differential expression analysis count quantification data. just one count quantification file, user can obtain list genes indicated differentially expressed 5 methods. user-friendly graphical interface, can used web browser, user can parameterize 7 expression analysis methodologies. differential expression analysis performed methods edgeR, DeSeq2, SAMSeq, KnowSeq, EBSeq, limma, NOISeq. results tool can written .csv files. Visualization carried heat map Plot, containing genes considered differentially expressed 5 methods. consexpressionR R package differential expression analysis count quantification data. just one count quantification file, user can obtain list genes indicated differentially expressed 5 methods. user-friendly graphical interface, can used web browser, user can parameterize 7 expression analysis methodologies. differential expression analysis performed methods edgeR, DeSeq2, SAMSeq, KnowSeq, EBSeq, limma, NOISeq. results tool can written .csv files. Visualization carried radarPlot, containing genes thatwere considered differentially expressed 5 methods. can see pkgdown action https://costasilvati.shinyapps.io/consexpressionRapp/. Learn vignette(\"consexpressionR\").","code":""},{"path":"https://costasilvati.github.io/consexpressionR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Differential Expression Analysis using consensus of 7 methods","text":"","code":"# Install released version from github library(devtools) install_github(\"costasilvati/consexpressionR\") library(consexpressionR)"},{"path":"https://costasilvati.github.io/consexpressionR/index.html","id":"usage---shiny-app","dir":"","previous_headings":"","what":"Usage - shiny app","title":"Differential Expression Analysis using consensus of 7 methods","text":"run shiny aplication view consexpressionR browser:","code":"# Install released version from github library(devtools) install_github(\"costasilvati/consexpressionR\") library(consexpressionR) # shinyApp running in localhost consexpressionR() library(consexpressionR) # shinyApp running in localhost consexpressionR()"},{"path":"https://costasilvati.github.io/consexpressionR/reference/consensusList.html","id":null,"dir":"Reference","previous_headings":"","what":"consensusList: make a list of genes was consider DE by threshold tools — consensusList","title":"consensusList: make a list of genes was consider DE by threshold tools — consensusList","text":"consensusList: make list genes consider DE threshold tools","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/consensusList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"consensusList: make a list of genes was consider DE by threshold tools — consensusList","text":"","code":"consensusList(consexpressionList, deTool, threshold = 5)"},{"path":"https://costasilvati.github.io/consexpressionR/reference/consensusList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"consensusList: make a list of genes was consider DE by threshold tools — consensusList","text":"consexpressionList list. Output 'consexpressionR' function deTool data.frame. Output 'deByTool' function threshold integer. Number tool consider gene DE filter (default: 5)","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/consensusList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"consensusList: make a list of genes was consider DE by threshold tools — consensusList","text":"data.frame DE genes values analysis","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/consensusList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"consensusList: make a list of genes was consider DE by threshold tools — consensusList","text":"","code":"data(gse95077) treats <- c(\"BM\", \"JJ\") cons_result <- runExpression(numberReplics = 3,groupName = treats,                             rDataFrameCount = gse95077,                             sepCharacter = \",\",                             experimentName = \"test_cons\",                             controlDeseq2 = \"BM\",                             contrastDeseq2 = \"JJ\",                             outDirPath = \".\") #> Using classic mode. #> Getting annotation of the Homo Sapiens... #> Using reference genome 38. #> Calculating gene expression values... #> RQ fit ...... #> SQN  #>  #>   #>  ===== ERROR: KnowSeq execution is failed ===  #>  Error in mclustBIC(data = structure(c(-3.52446659876917, -2.42801002792396, : could not find function \"mclustBIC\" #>   #> Removing intercept from test coefficients #>  #>  ------------ limma executed! #> [1] \"Computing (M,D) values...\" #> [1] \"Computing probability of differential expression...\" #>  #>  ------------ NOISeq executed!  #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Initial number of DE patterns = 2 #> Final number of DE patterns = 2 #>  #>  ------------ EBSeq executed! #> Warning: some variables in design formula are characters, converting to factors #> [1] \"Dataset is COUNT data\" #> estimating size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing #>  #>  ------------ DESeq2 executed! #> Estimating sequencing depths... #> Resampling to get new data matrices... #> perm= 1 #> perm= 2 #> perm= 3 #> perm= 4 #> perm= 5 #> perm= 6 #> perm= 7 #> perm= 8 #> perm= 9 #> perm= 10 #> perm= 11 #> perm= 12 #> perm= 13 #> perm= 14 #> perm= 15 #> perm= 16 #> perm= 17 #> perm= 18 #> perm= 19 #> perm= 20 #> perm= 21 #> perm= 22 #> perm= 23 #> perm= 24 #> perm= 25 #> perm= 26 #> perm= 27 #> perm= 28 #> perm= 29 #> perm= 30 #> perm= 31 #> perm= 32 #> perm= 33 #> perm= 34 #> perm= 35 #> perm= 36 #> perm= 37 #> perm= 38 #> perm= 39 #> perm= 40 #> perm= 41 #> perm= 42 #> perm= 43 #> perm= 44 #> perm= 45 #> perm= 46 #> perm= 47 #> perm= 48 #> perm= 49 #> perm= 50 #> perm= 51 #> perm= 52 #> perm= 53 #> perm= 54 #> perm= 55 #> perm= 56 #> perm= 57 #> perm= 58 #> perm= 59 #> perm= 60 #> perm= 61 #> perm= 62 #> perm= 63 #> perm= 64 #> perm= 65 #> perm= 66 #> perm= 67 #> perm= 68 #> perm= 69 #> perm= 70 #> perm= 71 #> perm= 72 #> perm= 73 #> perm= 74 #> perm= 75 #> perm= 76 #> perm= 77 #> perm= 78 #> perm= 79 #> perm= 80 #> perm= 81 #> perm= 82 #> perm= 83 #> perm= 84 #> perm= 85 #> perm= 86 #> perm= 87 #> perm= 88 #> perm= 89 #> perm= 90 #> perm= 91 #> perm= 92 #> perm= 93 #> perm= 94 #> perm= 95 #> perm= 96 #> perm= 97 #> perm= 98 #> perm= 99 #> perm= 100 #> Number of thresholds chosen (all possible thresholds) = 7 #> Getting all the cutoffs for the thresholds... #> Getting number of false positives in the permutation... #>  #>  ------------ SAMSeq executed! #>  #>  ------------ DIFERENTIAL EXPRESSION ANALYSIS WAS COMPLETE! expDef_result <- expressionDefinition(resultTool = cons_result,                                       groups = treats) deByTool <- listDeByTool(consexpressionList = cons_result,                          geneNames = row.names(gse95077),                          deList = expDef_result) consList <- consensusList(cons_result,deByTool)"},{"path":"https://costasilvati.github.io/consexpressionR/reference/consexpressionR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"consexpressionR: Differential Expression Analysis using consensus of 7 methods — consexpressionR-package","title":"consexpressionR: Differential Expression Analysis using consensus of 7 methods — consexpressionR-package","text":"Comprehensive five-stage workflow differential expression (DE) analysis. Execution DE analysis default parameter seven six R packages: DeSeq2, EBSeq, edgeR, KnowSeq, limma, NOISeq, SAMSeq. Combine results different methods obtain robust reliable results gene expression changes.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/consexpressionR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"consexpressionR: Differential Expression Analysis using consensus of 7 methods — consexpressionR-package","text":"Maintainer: Juliana Costa-Silva julianacostasilvati@gmail.com (ORCID) Authors: David Menotti menottid@gmail.com (ORCID) Fabricio M. Lopes fabricio@utfpr.edu.br (ORCID)","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/createNameFileOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a file output name — createNameFileOutput","title":"Build a file output name — createNameFileOutput","text":"Build file output name","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/createNameFileOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a file output name — createNameFileOutput","text":"","code":"createNameFileOutput(outDirPath = \".\", execName = \"exec\")"},{"path":"https://costasilvati.github.io/consexpressionR/reference/createNameFileOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a file output name — createNameFileOutput","text":"outDirPath name file data read . row table appears one line file. contain absolute path, file name relative current working directory, getwd(). can compressed file (see file). Alternatively, file can readable text-mode connection (opened reading necessary, closed (hence destroyed) end function call). execName name tool run, can gene expression tool","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/createNameFileOutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a file output name — createNameFileOutput","text":"string name path file output","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/createNameFileOutput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a file output name — createNameFileOutput","text":"","code":"nameFile <- createNameFileOutput (outDirPath = \"data/\", execName = \"expermient1\")"},{"path":"https://costasilvati.github.io/consexpressionR/reference/expressionDefinition.html","id":null,"dir":"Reference","previous_headings":"","what":"Define who genes are deferentially expressed by method — expressionDefinition","title":"Define who genes are deferentially expressed by method — expressionDefinition","text":"Define genes deferentially expressed method","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/expressionDefinition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define who genes are deferentially expressed by method — expressionDefinition","text":"","code":"expressionDefinition(   resultTool,   groups = c(\"\"),   lfcMinLimma = -2,   lfcMaxLimma = 2,   pValueLimma = 0.05,   FLimma = 0.8,   lfcMinSamseq = -2,   lfcMaxSamseq = 2,   qValueSamseq = 0.05,   lfcMinDeseq2 = -2,   scoreDSamseq = 0.8,   lfcMaxDeseq2 = 2,   pValueDeseq2 = 0.05,   lfcMinEdger = -2,   lfcMaxEdger = 2,   pValueEdger = 0.05,   probNoiseq = 0.8,   lfcMinKnowseq = -2,   lfcMaxKnowseq = 2,   pValueKnowseq = 0.05,   deClassEbseq = \"DE\",   ppThresholdEbseq = 0.8,   printResults = FALSE,   pathOutput = \".\" )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/expressionDefinition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define who genes are deferentially expressed by method — expressionDefinition","text":"resultTool table results consexpressionR function groups text, name samples treatment lfcMinLimma minimum value consider log Fold Change (default: -2). lfcMaxLimma maximum value consider log Fold Change (default: 2) pValueLimma minimum P-Value consider (default: 0.05) FLimma F statistics used test null hypotheses groups median expression lfcMinSamseq minimum value consider log Fold Change (default: -2). lfcMaxSamseq maximum value consider log Fold Change (default: 2) qValueSamseq q-value measure statistical significance difference expression compared groups, taking problem multiple comparisons account (default: 0.8) lfcMinDeseq2 minimum value consider log Fold Change (default: -2). scoreDSamseq statistic used evaluate significance gene multi class analysis lfcMaxDeseq2 maximum value consider log Fold Change (default: 2) pValueDeseq2 minimum P-Value consider (default: 0.05) lfcMinEdger minimum value consider log Fold Change (default: -2). lfcMaxEdger maximum value consider log Fold Change (default: 2) pValueEdger minimum P-Value consider (default: 0.05) probNoiseq floating point, minimum probability read count comes real gene expression peak, rather background noiseq (default: 0.95) lfcMinKnowseq minimum value consider log Fold Change (default: -2). lfcMaxKnowseq maximum value consider log Fold Change (default: 2) pValueKnowseq minimum P-Value consider (default: 0.05) deClassEbseq name class consider EBSeq (default: \"DE\") ppThresholdEbseq description printResults logical variable: TRUE print report tool, FALSE print consensus result pathOutput path write output, need directory (default: \".\") #'","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/expressionDefinition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define who genes are deferentially expressed by method — expressionDefinition","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") cons_result <- runExpression(numberReplics = 3,                               groupName = treats,                               rDataFrameCount = gse95077,                               sepCharacter = \",\",                               experimentName = \"test_cons\",                               controlDeseq2 = \"BM\",                               contrastDeseq2 = \"JJ\",                               outDirPath = \".\" ) #> Using classic mode. #> Getting annotation of the Homo Sapiens... #> Using reference genome 38. #> Calculating gene expression values... #> RQ fit ...... #> SQN  #>  #>   #>  ===== ERROR: KnowSeq execution is failed ===  #>  Error in mclustBIC(data = structure(c(-3.52446659876917, -2.42801002792396, : could not find function \"mclustBIC\" #>   #> Removing intercept from test coefficients #>  #>  ------------ limma executed! #> [1] \"Computing (M,D) values...\" #> [1] \"Computing probability of differential expression...\" #>  #>  ------------ NOISeq executed!  #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Initial number of DE patterns = 2 #> Final number of DE patterns = 2 #>  #>  ------------ EBSeq executed! #> Warning: some variables in design formula are characters, converting to factors #> [1] \"Dataset is COUNT data\" #> estimating size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing #>  #>  ------------ DESeq2 executed! #> Estimating sequencing depths... #> Resampling to get new data matrices... #> perm= 1 #> perm= 2 #> perm= 3 #> perm= 4 #> perm= 5 #> perm= 6 #> perm= 7 #> perm= 8 #> perm= 9 #> perm= 10 #> perm= 11 #> perm= 12 #> perm= 13 #> perm= 14 #> perm= 15 #> perm= 16 #> perm= 17 #> perm= 18 #> perm= 19 #> perm= 20 #> perm= 21 #> perm= 22 #> perm= 23 #> perm= 24 #> perm= 25 #> perm= 26 #> perm= 27 #> perm= 28 #> perm= 29 #> perm= 30 #> perm= 31 #> perm= 32 #> perm= 33 #> perm= 34 #> perm= 35 #> perm= 36 #> perm= 37 #> perm= 38 #> perm= 39 #> perm= 40 #> perm= 41 #> perm= 42 #> perm= 43 #> perm= 44 #> perm= 45 #> perm= 46 #> perm= 47 #> perm= 48 #> perm= 49 #> perm= 50 #> perm= 51 #> perm= 52 #> perm= 53 #> perm= 54 #> perm= 55 #> perm= 56 #> perm= 57 #> perm= 58 #> perm= 59 #> perm= 60 #> perm= 61 #> perm= 62 #> perm= 63 #> perm= 64 #> perm= 65 #> perm= 66 #> perm= 67 #> perm= 68 #> perm= 69 #> perm= 70 #> perm= 71 #> perm= 72 #> perm= 73 #> perm= 74 #> perm= 75 #> perm= 76 #> perm= 77 #> perm= 78 #> perm= 79 #> perm= 80 #> perm= 81 #> perm= 82 #> perm= 83 #> perm= 84 #> perm= 85 #> perm= 86 #> perm= 87 #> perm= 88 #> perm= 89 #> perm= 90 #> perm= 91 #> perm= 92 #> perm= 93 #> perm= 94 #> perm= 95 #> perm= 96 #> perm= 97 #> perm= 98 #> perm= 99 #> perm= 100 #> Number of thresholds chosen (all possible thresholds) = 8 #> Getting all the cutoffs for the thresholds... #> Getting number of false positives in the permutation... #>  #>  ------------ SAMSeq executed! #>  #>  ------------ DIFERENTIAL EXPRESSION ANALYSIS WAS COMPLETE! expDef_result <- expressionDefinition(resultTool = cons_result, groups = treats)"},{"path":"https://costasilvati.github.io/consexpressionR/reference/frameAllGenes.html","id":null,"dir":"Reference","previous_headings":"","what":"frameAllGenes — frameAllGenes","title":"frameAllGenes — frameAllGenes","text":"function creates data.frame result diffrential expression method performed. created ensure genes listed, even thought gene appear diffrentially expressed, case NA data inserted. functis executed runExpression() function, need call separatelly.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/frameAllGenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"frameAllGenes — frameAllGenes","text":"","code":"frameAllGenes(cons_list, countMatrix)"},{"path":"https://costasilvati.github.io/consexpressionR/reference/frameAllGenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"frameAllGenes — frameAllGenes","text":"cons_list list generated runExpression() function execution countMatrix RData object table count, line name gene name, name column treat name","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/frameAllGenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"frameAllGenes — frameAllGenes","text":"list analysis expression containing: methods executed results, ensuring thar genes listed;","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/frameAllGenes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"frameAllGenes — frameAllGenes","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") cons_result <- runExpression(numberReplics = 3,                              groupName = treats,                               rDataFrameCount = gse95077,                               sepCharacter = \",\",                               experimentName = \"test_cons\",                               controlDeseq2 = \"BM\",                               contrastDeseq2 = \"JJ\",                               outDirPath = \".\" ) #> Using classic mode. #> Getting annotation of the Homo Sapiens... #> Using reference genome 38. #> Calculating gene expression values... #> RQ fit ...... #> SQN  #>  #>   #>  ===== ERROR: KnowSeq execution is failed ===  #>  Error in mclustBIC(data = structure(c(-3.52446659876917, -2.42801002792396, : could not find function \"mclustBIC\" #>   #> Removing intercept from test coefficients #>  #>  ------------ limma executed! #> [1] \"Computing (M,D) values...\" #> [1] \"Computing probability of differential expression...\" #>  #>  ------------ NOISeq executed!  #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Initial number of DE patterns = 2 #> Final number of DE patterns = 2 #>  #>  ------------ EBSeq executed! #> Warning: some variables in design formula are characters, converting to factors #> [1] \"Dataset is COUNT data\" #> estimating size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing #>  #>  ------------ DESeq2 executed! #> Estimating sequencing depths... #> Resampling to get new data matrices... #> perm= 1 #> perm= 2 #> perm= 3 #> perm= 4 #> perm= 5 #> perm= 6 #> perm= 7 #> perm= 8 #> perm= 9 #> perm= 10 #> perm= 11 #> perm= 12 #> perm= 13 #> perm= 14 #> perm= 15 #> perm= 16 #> perm= 17 #> perm= 18 #> perm= 19 #> perm= 20 #> perm= 21 #> perm= 22 #> perm= 23 #> perm= 24 #> perm= 25 #> perm= 26 #> perm= 27 #> perm= 28 #> perm= 29 #> perm= 30 #> perm= 31 #> perm= 32 #> perm= 33 #> perm= 34 #> perm= 35 #> perm= 36 #> perm= 37 #> perm= 38 #> perm= 39 #> perm= 40 #> perm= 41 #> perm= 42 #> perm= 43 #> perm= 44 #> perm= 45 #> perm= 46 #> perm= 47 #> perm= 48 #> perm= 49 #> perm= 50 #> perm= 51 #> perm= 52 #> perm= 53 #> perm= 54 #> perm= 55 #> perm= 56 #> perm= 57 #> perm= 58 #> perm= 59 #> perm= 60 #> perm= 61 #> perm= 62 #> perm= 63 #> perm= 64 #> perm= 65 #> perm= 66 #> perm= 67 #> perm= 68 #> perm= 69 #> perm= 70 #> perm= 71 #> perm= 72 #> perm= 73 #> perm= 74 #> perm= 75 #> perm= 76 #> perm= 77 #> perm= 78 #> perm= 79 #> perm= 80 #> perm= 81 #> perm= 82 #> perm= 83 #> perm= 84 #> perm= 85 #> perm= 86 #> perm= 87 #> perm= 88 #> perm= 89 #> perm= 90 #> perm= 91 #> perm= 92 #> perm= 93 #> perm= 94 #> perm= 95 #> perm= 96 #> perm= 97 #> perm= 98 #> perm= 99 #> perm= 100 #> Number of thresholds chosen (all possible thresholds) = 8 #> Getting all the cutoffs for the thresholds... #> Getting number of false positives in the permutation... #>  #>  ------------ SAMSeq executed! #>  #>  ------------ DIFERENTIAL EXPRESSION ANALYSIS WAS COMPLETE! cons_rseult2 <- frameAllGenes(cons_list = cons_result,                               countMatrix=gse95077) #>  -  1 edger -  2 limma -  3 noiseq -  4 ebseq -  5 deseq2 -  6 samseq"},{"path":"https://costasilvati.github.io/consexpressionR/reference/gse95077.html","id":null,"dir":"Reference","previous_headings":"","what":"NCBI GEO access GSE95077 dataset — gse95077","title":"NCBI GEO access GSE95077 dataset — gse95077","text":"Amiloride, old diuretic drug, potential therapeutic agent multiple myeloma Report ...","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/gse95077.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NCBI GEO access GSE95077 dataset — gse95077","text":"","code":"gse95077"},{"path":[]},{"path":"https://costasilvati.github.io/consexpressionR/reference/gse95077.html","id":"-csv","dir":"Reference","previous_headings":"","what":".csv","title":"NCBI GEO access GSE95077 dataset — gse95077","text":"data frame 31 rows 6 columns: design Poly + RNA KMS12-BM JJN3 cells untreated treated amiloride TG003 (0.1 mM, 0.4 mM, 0.4 mM respectively) 24 h isolated prepared RNA-seq. organism Homo Sapiens year 2018","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/gse95077.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NCBI GEO access GSE95077 dataset — gse95077","text":"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE95077","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/listDeByTool.html","id":null,"dir":"Reference","previous_headings":"","what":"listDeByTool: makes a data.frame with genes (lines) and all executed DE tool. Each tool that identify gene as DE, are marked by 1. — listDeByTool","title":"listDeByTool: makes a data.frame with genes (lines) and all executed DE tool. Each tool that identify gene as DE, are marked by 1. — listDeByTool","text":"listDeByTool: makes data.frame genes (lines) executed DE tool. tool identify gene DE, marked 1.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/listDeByTool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"listDeByTool: makes a data.frame with genes (lines) and all executed DE tool. Each tool that identify gene as DE, are marked by 1. — listDeByTool","text":"","code":"listDeByTool(consexpressionList, geneNames, deList)"},{"path":"https://costasilvati.github.io/consexpressionR/reference/listDeByTool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"listDeByTool: makes a data.frame with genes (lines) and all executed DE tool. Each tool that identify gene as DE, are marked by 1. — listDeByTool","text":"consexpressionList list generated consexpressionR function geneNames name genes experiment (list) deList List names genes analysed experiment","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/listDeByTool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"listDeByTool: makes a data.frame with genes (lines) and all executed DE tool. Each tool that identify gene as DE, are marked by 1. — listDeByTool","text":"data.frame genes (lines) DE tools (column), 1 shows DE indication tool.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/listDeByTool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"listDeByTool: makes a data.frame with genes (lines) and all executed DE tool. Each tool that identify gene as DE, are marked by 1. — listDeByTool","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") cons_result <- runExpression(numberReplics = 3, groupName = treats,                               rDataFrameCount = gse95077,                               sepCharacter = \",\",                               experimentName = \"test_cons\",                               outDirPath = \".\" ) #> Using classic mode. #> Getting annotation of the Homo Sapiens... #> Using reference genome 38. #> Calculating gene expression values... #> RQ fit ...... #> SQN  #>  #>   #>  ===== ERROR: KnowSeq execution is failed ===  #>  Error in mclustBIC(data = structure(c(-3.52446659876917, -2.42801002792396, : could not find function \"mclustBIC\" #>   #> Removing intercept from test coefficients #>  #>  ------------ limma executed! #> [1] \"Computing (M,D) values...\" #> [1] \"Computing probability of differential expression...\" #>  #>  ------------ NOISeq executed!  #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Initial number of DE patterns = 2 #> Final number of DE patterns = 2 #>  #>  ------------ EBSeq executed! #>  #>   #>  ===== ERROR: in DESeq2 execution is failed ===  #>  === Contrast group is: [  ]  #>  === Control group is: [  ]  #>  ERROR!! This values are not defined in groupName: [ BM ] #>  #>   #>  ===== ERROR: in DESeq2 execution is failed ===  #>  === Contrast group is: [  ]  #>  === Control group is: [  ]  #>  ERROR!! This values are not defined in groupName: [ JJ ] #>  #>  ------------ DESeq2 executed! #> Estimating sequencing depths... #> Resampling to get new data matrices... #> perm= 1 #> perm= 2 #> perm= 3 #> perm= 4 #> perm= 5 #> perm= 6 #> perm= 7 #> perm= 8 #> perm= 9 #> perm= 10 #> perm= 11 #> perm= 12 #> perm= 13 #> perm= 14 #> perm= 15 #> perm= 16 #> perm= 17 #> perm= 18 #> perm= 19 #> perm= 20 #> perm= 21 #> perm= 22 #> perm= 23 #> perm= 24 #> perm= 25 #> perm= 26 #> perm= 27 #> perm= 28 #> perm= 29 #> perm= 30 #> perm= 31 #> perm= 32 #> perm= 33 #> perm= 34 #> perm= 35 #> perm= 36 #> perm= 37 #> perm= 38 #> perm= 39 #> perm= 40 #> perm= 41 #> perm= 42 #> perm= 43 #> perm= 44 #> perm= 45 #> perm= 46 #> perm= 47 #> perm= 48 #> perm= 49 #> perm= 50 #> perm= 51 #> perm= 52 #> perm= 53 #> perm= 54 #> perm= 55 #> perm= 56 #> perm= 57 #> perm= 58 #> perm= 59 #> perm= 60 #> perm= 61 #> perm= 62 #> perm= 63 #> perm= 64 #> perm= 65 #> perm= 66 #> perm= 67 #> perm= 68 #> perm= 69 #> perm= 70 #> perm= 71 #> perm= 72 #> perm= 73 #> perm= 74 #> perm= 75 #> perm= 76 #> perm= 77 #> perm= 78 #> perm= 79 #> perm= 80 #> perm= 81 #> perm= 82 #> perm= 83 #> perm= 84 #> perm= 85 #> perm= 86 #> perm= 87 #> perm= 88 #> perm= 89 #> perm= 90 #> perm= 91 #> perm= 92 #> perm= 93 #> perm= 94 #> perm= 95 #> perm= 96 #> perm= 97 #> perm= 98 #> perm= 99 #> perm= 100 #> Number of thresholds chosen (all possible thresholds) = 8 #> Getting all the cutoffs for the thresholds... #> Getting number of false positives in the permutation... #>  #>  ------------ SAMSeq executed! #>  #>  ------------ DIFERENTIAL EXPRESSION ANALYSIS WAS COMPLETE! expDef_result <- expressionDefinition(resultTool = cons_result, groups = treats) deByTool <- listDeByTool(consexpressionList = cons_result,                          geneNames = row.names(gse95077),                          deList = expDef_result)"},{"path":"https://costasilvati.github.io/consexpressionR/reference/readCountFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read table count File and creates a matrix from the given content file. — readCountFile","title":"Read table count File and creates a matrix from the given content file. — readCountFile","text":"Read table count File creates matrix given content file.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/readCountFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read table count File and creates a matrix from the given content file. — readCountFile","text":"","code":"readCountFile(tableCountPath = \"data/table_count_df.csv\", split = \",\")"},{"path":"https://costasilvati.github.io/consexpressionR/reference/readCountFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read table count File and creates a matrix from the given content file. — readCountFile","text":"tableCountPath name file data read . row table appears one line file. contain absolute path, file name relative current working directory, getwd(). can compressed file (see file). Alternatively, file can readable text-mode connection (opened reading necessary, closed (hence destroyed) end function call). split field separator character. Values line file separated character. sep = \"\" (default read.table) separator ‘,’, newlines carriage returns.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/readCountFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read table count File and creates a matrix from the given content file. — readCountFile","text":"content file matrix R format","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/readCountFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read table count File and creates a matrix from the given content file. — readCountFile","text":"","code":"if (FALSE) { # \\dontrun{ df <- readCountFile(tableCountPath=\"./data/gse95077.csv\",                     split=\",\") } # }"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runDeseq2.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute DESeq2 DGE default analysis is configured to read only kallisto files, and count data — runDeseq2","title":"Execute DESeq2 DGE default analysis is configured to read only kallisto files, and count data — runDeseq2","text":"Execute DESeq2 DGE default analysis configured read kallisto files, count data","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runDeseq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute DESeq2 DGE default analysis is configured to read only kallisto files, and count data — runDeseq2","text":"","code":"runDeseq2(   countMatrix,   groupName,   numberReplics,   controlGroup,   contrastGroup,   fitTypeParam = \"local\" )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runDeseq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute DESeq2 DGE default analysis is configured to read only kallisto files, and count data — runDeseq2","text":"countMatrix original table count abundance data groupName list text, name samples treatment numberReplics number replicate (technical biological) sample controlGroup specific reference level used control (name groupName List) contrastGroup specific reference level need compare (name groupName List) fitTypeParam either \"parametric\", \"local\", \"mean\", \"glmGamPoi\" type fitting dispersions mean intensity","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runDeseq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute DESeq2 DGE default analysis is configured to read only kallisto files, and count data — runDeseq2","text":"extracted results DESeq2 (generated DESeq2::results function)","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runDeseq2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute DESeq2 DGE default analysis is configured to read only kallisto files, and count data — runDeseq2","text":"","code":"groupNameModel = c(\"BM\",\"JJ\") numberReplicsModel = 3 toolResult <- NULL data(gse95077) toolResult$deseq2 <- runDeseq2(countMatrix = gse95077,                                groupName = groupNameModel,                                numberReplics = numberReplicsModel,                                controlGroup = \"BM\",                                contrastGroup = \"JJ\",                                fitTypeParam = \"local\") #> Warning: some variables in design formula are characters, converting to factors #> [1] \"Dataset is COUNT data\" #> estimating size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEbseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute EBSeq gene Expression analysis — runEbseq","title":"Execute EBSeq gene Expression analysis — runEbseq","text":"Execute EBSeq gene Expression analysis","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEbseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute EBSeq gene Expression analysis — runEbseq","text":"","code":"runEbseq(   countMatrix,   designExperiment,   fdr = 0.05,   ppThreshold = 0.8,   maxRound = 50,   methodDeResults = \"robust\",   groups = c(\"\") )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEbseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute EBSeq gene Expression analysis — runEbseq","text":"countMatrix either matrix raw (read) counts. designExperiment replicate treatment samples fdr parameter used EBTest function: fdr False Discovery Rate cutt ppThreshold posterior Probability Threshold maxRound parameter used EBTest function: Number iterations. default value 50. methodDeResults parameter used GetDEResults function: \"robust\" \"classic\". Using \"robust\" option, EBSeq robust genes outliers genes extremely small variances. Using \"classic\" option, results comparable obtained using GetPPMat() function earlier version (<= 1.7.0) EBSeq groups text, name samples treatment","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEbseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute EBSeq gene Expression analysis — runEbseq","text":"EBSeq report data Frame fromat","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEbseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute EBSeq gene Expression analysis — runEbseq","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") designExperimentModel <- rep(treats, each = 3) toolResult <- NULL toolResult$ebseq <- runEbseq(countMatrix = gse95077,                               designExperiment = designExperimentModel,                               groups = treats) #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Initial number of DE patterns = 2 #> Final number of DE patterns = 2"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEdger.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute edgeR expression Analisys — runEdger","title":"Execute edgeR expression Analisys — runEdger","text":"Execute edgeR expression Analisys","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEdger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute edgeR expression Analisys — runEdger","text":"","code":"runEdger(countMatrix, numberReplics, desingExperiment, methNorm = \"TMM\")"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEdger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute edgeR expression Analisys — runEdger","text":"countMatrix either matrix raw (read) counts. numberReplics number replicate (technical biologcal) integer desingExperiment replicate treatment samples methNorm normalization method used edgeR::calcNormFactors(), default: \"TMM\"","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEdger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute edgeR expression Analisys — runEdger","text":"edgeR report data Frame","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runEdger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute edgeR expression Analisys — runEdger","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") numberReplicsModel = 3 designExperimentModel <- rep(treats, each = numberReplicsModel) toolResult <- NULL toolResult$edger <- runEdger(countMatrix = gse95077,                                numberReplics = numberReplicsModel,                                desingExperiment = designExperimentModel ) #> Using classic mode."},{"path":"https://costasilvati.github.io/consexpressionR/reference/runExpression.html","id":null,"dir":"Reference","previous_headings":"","what":"Make expression analysis of 7 tools, and return a list of results by each tool. — runExpression","title":"Make expression analysis of 7 tools, and return a list of results by each tool. — runExpression","text":"Make expression analysis 7 tools, return list results tool.","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runExpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make expression analysis of 7 tools, and return a list of results by each tool. — runExpression","text":"","code":"runExpression(   numberReplics,   groupName,   tableCountPath = \"data/gse95077.csv\",   sepCharacter = \",\",   rDataFrameCount = NULL,   experimentName = \"genericExperiment\",   outDirPath = \"../../consexpression2_results/\",   printResults = FALSE,   fitTypeDeseq2 = \"local\",   controlDeseq2 = \"\",   contrastDeseq2 = \"\",   methodNormLimma = \"TMM\",   methodAdjPvalueLimma = \"BH\",   numberTopTableLimma = 1e+06,   filterIdKnowseq = \"ensembl_gene_id\",   notSapiensKnowseq = FALSE,   methodNormEdgeR = \"TMM\",   normNoiseq = \"rpkm\",   kNoiseq = 0.5,   factorNoiseq = \"Tissue\",   lcNoiseq = 0,   replicatesNoiseq = \"technical\",   condExpNoiseq = c(\"\"),   respTypeSamseq = \"Two class unpaired\",   npermSamseq = 100,   fdrEbseq = 0.05,   maxRoundEbseq = 50,   methodDeResultsEbseq = \"robust\",   deNovoAanalysis = FALSE,   progressShiny = NULL )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runExpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make expression analysis of 7 tools, and return a list of results by each tool. — runExpression","text":"numberReplics number replicate (technical biological) sample groupName text, name samples treatment tableCountPath path csv file contains count data abundance data (local) sepCharacter character used split csv data, can comma tab rDataFrameCount RData object table count, line name gene name, name column treat name experimentName text, name experiment outDirPath path write output, need directory (local) printResults logical variable: TRUE print report tool, FALSE print consensus result fitTypeDeseq2 either \"parametric\", \"local\", \"mean\", \"glmGamPoi\" type fitting dispersions mean intensity controlDeseq2 group samples represents control experiment, used DESeq2; Default \"\". contrastDeseq2 specific reference level need compare (name groupName List) methodNormLimma normalization method used (limma) methodAdjPvalueLimma correction method, character string. Can abbreviated (limma) numberTopTableLimma maximum number genes list (limma) filterIdKnowseq attribute used filter return rest attributes. notSapiensKnowseq boolean value indicates user wants human annotation another annotation available BiomaRt. possible human dataset can consulted calling following function: biomaRt::listDatasets(useMart(\"ensembl\")). methodNormEdgeR normalization method used edgeR::calcNormFactors(), default: \"TMM\" normNoiseq Normalization method t can one \"rpkm\" (default), \"uqua\" (upper quartile), \"tmm\" (trimmed mean M) \"n\" (normalization). Default: \"rpkm\". kNoiseq Counts equal 0 replaced k. default, k = 0.5 factorNoiseq string indicating name factor whose levels conditions compared. lcNoiseq Length correction done dividing expression length^lc. default, lc = 0 replicatesNoiseq argument, type replicates used defined: \"technical\", \"biological\" \"\" replicates. default, \"technical\" replicates option chosen. condExpNoiseq vector containing two conditions compared differential expression algorithm (needed factor contains 2 different conditions). respTypeSamseq Problem type: \"Quantitative\" continuous parameter; \"Two class unpaired\" two classes unpaired observations; \"Survival\" censored survival outcome; \"Multiclass\": 2 groups; \"Two class paired\" two classes paired observations. Default: \"Two class unpaired\". npermSamseq Number permutations used estimate false discovery rates. Default 100 fdrEbseq parameter used EBTest function: fdr False Discovery Rate cutt maxRoundEbseq parameter used EBTest function: Number iterations. default value 50. methodDeResultsEbseq parameter used GetDEResults function: \"robust\" \"classic\". Using \"robust\" option, EBSeq robust genes outliers genes extremely small variances. Using \"classic\" option, results comparable obtained using GetPPMat() function earlier version (<= 1.7.0) EBSeq deNovoAanalysis boolean value (TRUE dataset don`t reference genome) progressShiny shiny app element, used show execution progress","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runExpression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make expression analysis of 7 tools, and return a list of results by each tool. — runExpression","text":"list analysis expression","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runExpression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make expression analysis of 7 tools, and return a list of results by each tool. — runExpression","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") cons_result <- runExpression(numberReplics = 3,                               groupName = treats,                               rDataFrameCount = gse95077,                               sepCharacter = \",\",                               experimentName = \"test_cons\",                               controlDeseq2 = \"BM\",                               contrastDeseq2 = \"JJ\",                               outDirPath = \".\" ) #> Using classic mode. #> Getting annotation of the Homo Sapiens... #> Using reference genome 38. #> Calculating gene expression values... #> RQ fit ...... #> SQN  #>  #>   #>  ===== ERROR: KnowSeq execution is failed ===  #>  Error in mclustBIC(data = structure(c(-3.52446659876917, -2.42801002792396, : could not find function \"mclustBIC\" #>   #> Removing intercept from test coefficients #>  #>  ------------ limma executed! #> [1] \"Computing (M,D) values...\" #> [1] \"Computing probability of differential expression...\" #>  #>  ------------ NOISeq executed!  #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Initial number of DE patterns = 2 #> Final number of DE patterns = 2 #>  #>  ------------ EBSeq executed! #> Warning: some variables in design formula are characters, converting to factors #> [1] \"Dataset is COUNT data\" #> estimating size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing #>  #>  ------------ DESeq2 executed! #> Estimating sequencing depths... #> Resampling to get new data matrices... #> perm= 1 #> perm= 2 #> perm= 3 #> perm= 4 #> perm= 5 #> perm= 6 #> perm= 7 #> perm= 8 #> perm= 9 #> perm= 10 #> perm= 11 #> perm= 12 #> perm= 13 #> perm= 14 #> perm= 15 #> perm= 16 #> perm= 17 #> perm= 18 #> perm= 19 #> perm= 20 #> perm= 21 #> perm= 22 #> perm= 23 #> perm= 24 #> perm= 25 #> perm= 26 #> perm= 27 #> perm= 28 #> perm= 29 #> perm= 30 #> perm= 31 #> perm= 32 #> perm= 33 #> perm= 34 #> perm= 35 #> perm= 36 #> perm= 37 #> perm= 38 #> perm= 39 #> perm= 40 #> perm= 41 #> perm= 42 #> perm= 43 #> perm= 44 #> perm= 45 #> perm= 46 #> perm= 47 #> perm= 48 #> perm= 49 #> perm= 50 #> perm= 51 #> perm= 52 #> perm= 53 #> perm= 54 #> perm= 55 #> perm= 56 #> perm= 57 #> perm= 58 #> perm= 59 #> perm= 60 #> perm= 61 #> perm= 62 #> perm= 63 #> perm= 64 #> perm= 65 #> perm= 66 #> perm= 67 #> perm= 68 #> perm= 69 #> perm= 70 #> perm= 71 #> perm= 72 #> perm= 73 #> perm= 74 #> perm= 75 #> perm= 76 #> perm= 77 #> perm= 78 #> perm= 79 #> perm= 80 #> perm= 81 #> perm= 82 #> perm= 83 #> perm= 84 #> perm= 85 #> perm= 86 #> perm= 87 #> perm= 88 #> perm= 89 #> perm= 90 #> perm= 91 #> perm= 92 #> perm= 93 #> perm= 94 #> perm= 95 #> perm= 96 #> perm= 97 #> perm= 98 #> perm= 99 #> perm= 100 #> Number of thresholds chosen (all possible thresholds) = 7 #> Getting all the cutoffs for the thresholds... #> Getting number of false positives in the permutation... #>  #>  ------------ SAMSeq executed! #>  #>  ------------ DIFERENTIAL EXPRESSION ANALYSIS WAS COMPLETE! expDef_result <- expressionDefinition(resultTool = cons_result, groups = treats)"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runKnowSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute knowSeq differential Expression analyse — runKnowSeq","title":"Execute knowSeq differential Expression analyse — runKnowSeq","text":"Execute knowSeq differential Expression analyse","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runKnowSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute knowSeq differential Expression analyse — runKnowSeq","text":"","code":"runKnowSeq(   count,   groupName,   numberReplic,   filterId = \"ensembl_gene_id\",   notSapiens = FALSE )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runKnowSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute knowSeq differential Expression analyse — runKnowSeq","text":"count original table count abundance data groupName replicate treatment samples numberReplic number replicate (technical biological) sample filterId attribute used filter return rest attributes. notSapiens boolean value indicates user wants human annotation another annotation available BiomaRt. possible human dataset can consulted calling following function: biomaRt::listDatasets(useMart(\"ensembl\")).","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runKnowSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute knowSeq differential Expression analyse — runKnowSeq","text":"extracted results KnowSeq (generated KnowSeq::DEGsExtraction() function)","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runKnowSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute knowSeq differential Expression analyse — runKnowSeq","text":"","code":"if (FALSE) { # \\dontrun{ data(gse95077) treats = c(\"BM\", \"JJ\") toolResult <- NULL toolResult$knowSeq <- runKnowSeq(count = gse95077,                                groupName = treats,                                numberReplic = 3)  } # }"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runLimma.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute edgeR expression Analisys — runLimma","title":"Execute edgeR expression Analisys — runLimma","text":"Execute edgeR expression Analisys","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runLimma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute edgeR expression Analisys — runLimma","text":"","code":"runLimma(   countMatrix,   numberReplics,   designExperiment,   methodNorm = \"TMM\",   methodAdjPvalue = \"BH\",   numberTopTable = 1e+06 )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runLimma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute edgeR expression Analisys — runLimma","text":"countMatrix either matrix raw (read) counts. numberReplics number replicate (technical biologcal) integer designExperiment replicate treatment samples methodNorm normalization method used methodAdjPvalue correction method, character string. Can abbreviated. numberTopTable maximum number genes list","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runLimma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute edgeR expression Analisys — runLimma","text":"limma report data Frame fromat","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runLimma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute edgeR expression Analisys — runLimma","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") toolResult <- NULL toolResult$limma <- runLimma(countMatrix = gse95077,                              numberReplics = 3,                              designExperiment = rep(treats, each = 3)) #> Removing intercept from test coefficients"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runNoiSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute NOISeq gene Expression analysis — runNoiSeq","title":"Execute NOISeq gene Expression analysis — runNoiSeq","text":"Execute NOISeq gene Expression analysis","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runNoiSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute NOISeq gene Expression analysis — runNoiSeq","text":"","code":"runNoiSeq(   countMatrix,   designExperiment,   groups = c(\"\"),   normParm = \"rpkm\",   kParam = 0.5,   factorParam = c(\"Tissue\"),   lcParam = 0,   replicatesParam = \"technical\",   condExp = c(\"\") )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runNoiSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute NOISeq gene Expression analysis — runNoiSeq","text":"countMatrix either matrix raw (read) counts. designExperiment replicate treatment samples. groups text list separated comma, name samples treatment. normParm Normalization method t can one \"rpkm\" (default), \"uqua\" (upper quartile), \"tmm\" (trimmed mean M) \"n\" (normalization). kParam Counts equal 0 replaced k. default, k = 0.5 factorParam string indicating name factor whose levels conditions compared. lcParam Length correction done dividing expression length^lc. default, lc = 0 replicatesParam argument, type replicates used defined: \"technical\", \"biological\" \"\" replicates. default, \"technical\" replicates option chosen. condExp vector containing two conditions compared differential expression algorithm (needed factor contains 2 different conditions).","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runNoiSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute NOISeq gene Expression analysis — runNoiSeq","text":"data.frame output noiseqOut@results","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runNoiSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute NOISeq gene Expression analysis — runNoiSeq","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") toolResult <- NULL toolResult$noiseq <- runNoiSeq(countMatrix = gse95077,                                designExperiment = rep(treats, each = 3)) #> [1] \"Computing (M,D) values...\" #> [1] \"Computing probability of differential expression...\""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runSamSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute SAMSeq gene Expression analysis to count data — runSamSeq","title":"Execute SAMSeq gene Expression analysis to count data — runSamSeq","text":"Execute SAMSeq gene Expression analysis count data","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runSamSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute SAMSeq gene Expression analysis to count data — runSamSeq","text":"","code":"runSamSeq(   countMatrix,   designExperiment,   respType = \"Two class unpaired\",   numberPermutations = 100 )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/runSamSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute SAMSeq gene Expression analysis to count data — runSamSeq","text":"countMatrix either matrix raw (read) counts. designExperiment replicate treatment samples respType Problem type: \"Quantitative\" continuous parameter; \"Two class unpaired\" two classes unpaired observations; \"Survival\" censored survival outcome; \"Multiclass\": 2 groups; \"Two class paired\" two classes paired observations. numberPermutations Number permutations used estimate false discovery rates","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runSamSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute SAMSeq gene Expression analysis to count data — runSamSeq","text":"SAMSeq report data Frame","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/runSamSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute SAMSeq gene Expression analysis to count data — runSamSeq","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") toolResult <- NULL toolResult$samseq <- runSamSeq(countMatrix = gse95077,                                designExperiment = rep(treats, each = 3)) #> Estimating sequencing depths... #> Resampling to get new data matrices... #> perm= 1 #> perm= 2 #> perm= 3 #> perm= 4 #> perm= 5 #> perm= 6 #> perm= 7 #> perm= 8 #> perm= 9 #> perm= 10 #> perm= 11 #> perm= 12 #> perm= 13 #> perm= 14 #> perm= 15 #> perm= 16 #> perm= 17 #> perm= 18 #> perm= 19 #> perm= 20 #> perm= 21 #> perm= 22 #> perm= 23 #> perm= 24 #> perm= 25 #> perm= 26 #> perm= 27 #> perm= 28 #> perm= 29 #> perm= 30 #> perm= 31 #> perm= 32 #> perm= 33 #> perm= 34 #> perm= 35 #> perm= 36 #> perm= 37 #> perm= 38 #> perm= 39 #> perm= 40 #> perm= 41 #> perm= 42 #> perm= 43 #> perm= 44 #> perm= 45 #> perm= 46 #> perm= 47 #> perm= 48 #> perm= 49 #> perm= 50 #> perm= 51 #> perm= 52 #> perm= 53 #> perm= 54 #> perm= 55 #> perm= 56 #> perm= 57 #> perm= 58 #> perm= 59 #> perm= 60 #> perm= 61 #> perm= 62 #> perm= 63 #> perm= 64 #> perm= 65 #> perm= 66 #> perm= 67 #> perm= 68 #> perm= 69 #> perm= 70 #> perm= 71 #> perm= 72 #> perm= 73 #> perm= 74 #> perm= 75 #> perm= 76 #> perm= 77 #> perm= 78 #> perm= 79 #> perm= 80 #> perm= 81 #> perm= 82 #> perm= 83 #> perm= 84 #> perm= 85 #> perm= 86 #> perm= 87 #> perm= 88 #> perm= 89 #> perm= 90 #> perm= 91 #> perm= 92 #> perm= 93 #> perm= 94 #> perm= 95 #> perm= 96 #> perm= 97 #> perm= 98 #> perm= 99 #> perm= 100 #> Number of thresholds chosen (all possible thresholds) = 7 #> Getting all the cutoffs for the thresholds... #> Getting number of false positives in the permutation..."},{"path":"https://costasilvati.github.io/consexpressionR/reference/upSetPlotTools.html","id":null,"dir":"Reference","previous_headings":"","what":"UpSet Plot shows intersections by DE indications — upSetPlotTools","title":"UpSet Plot shows intersections by DE indications — upSetPlotTools","text":"UpSet Plot shows intersections DE indications","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/upSetPlotTools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UpSet Plot shows intersections by DE indications — upSetPlotTools","text":"","code":"upSetPlotTools(   df,   condition = \"condition_default\",   pathOut = \".\",   writeData = TRUE )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/upSetPlotTools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UpSet Plot shows intersections by DE indications — upSetPlotTools","text":"df data.frame: output 'listDeByTool' function. condition string: name analysed experminet (default: \"condition_default\") pathOut string: path write pdf file upset Plot (default: \".\") writeData boolean: TRUE want write PDF file (default: TRUE)","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/upSetPlotTools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UpSet Plot shows intersections by DE indications — upSetPlotTools","text":"data.frame row sum input df","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/upSetPlotTools.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UpSet Plot shows intersections by DE indications — upSetPlotTools","text":"","code":"data(gse95077) treats = c(\"BM\", \"JJ\") cons_result <- runExpression(numberReplics = 3, groupName = treats,                               rDataFrameCount = gse95077,                               sepCharacter = \",\",                               experimentName = \"test_cons\",                               outDirPath = \".\" ) #> Using classic mode. #> Getting annotation of the Homo Sapiens... #> Using reference genome 38. #> Calculating gene expression values... #> RQ fit ...... #> SQN  #>  #>   #>  ===== ERROR: KnowSeq execution is failed ===  #>  Error in mclustBIC(data = structure(c(-3.52446659876917, -2.42801002792396, : could not find function \"mclustBIC\" #>   #> Removing intercept from test coefficients #>  #>  ------------ limma executed! #> [1] \"Computing (M,D) values...\" #> [1] \"Computing probability of differential expression...\" #>  #>  ------------ NOISeq executed!  #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Warning: `expect_is()` was deprecated in the 3rd edition. #> ℹ Use `expect_type()`, `expect_s3_class()`, or `expect_s4_class()` instead #> Initial number of DE patterns = 2 #> Final number of DE patterns = 2 #>  #>  ------------ EBSeq executed! #>  #>   #>  ===== ERROR: in DESeq2 execution is failed ===  #>  === Contrast group is: [  ]  #>  === Control group is: [  ]  #>  ERROR!! This values are not defined in groupName: [ BM ] #>  #>   #>  ===== ERROR: in DESeq2 execution is failed ===  #>  === Contrast group is: [  ]  #>  === Control group is: [  ]  #>  ERROR!! This values are not defined in groupName: [ JJ ] #>  #>  ------------ DESeq2 executed! #> Estimating sequencing depths... #> Resampling to get new data matrices... #> perm= 1 #> perm= 2 #> perm= 3 #> perm= 4 #> perm= 5 #> perm= 6 #> perm= 7 #> perm= 8 #> perm= 9 #> perm= 10 #> perm= 11 #> perm= 12 #> perm= 13 #> perm= 14 #> perm= 15 #> perm= 16 #> perm= 17 #> perm= 18 #> perm= 19 #> perm= 20 #> perm= 21 #> perm= 22 #> perm= 23 #> perm= 24 #> perm= 25 #> perm= 26 #> perm= 27 #> perm= 28 #> perm= 29 #> perm= 30 #> perm= 31 #> perm= 32 #> perm= 33 #> perm= 34 #> perm= 35 #> perm= 36 #> perm= 37 #> perm= 38 #> perm= 39 #> perm= 40 #> perm= 41 #> perm= 42 #> perm= 43 #> perm= 44 #> perm= 45 #> perm= 46 #> perm= 47 #> perm= 48 #> perm= 49 #> perm= 50 #> perm= 51 #> perm= 52 #> perm= 53 #> perm= 54 #> perm= 55 #> perm= 56 #> perm= 57 #> perm= 58 #> perm= 59 #> perm= 60 #> perm= 61 #> perm= 62 #> perm= 63 #> perm= 64 #> perm= 65 #> perm= 66 #> perm= 67 #> perm= 68 #> perm= 69 #> perm= 70 #> perm= 71 #> perm= 72 #> perm= 73 #> perm= 74 #> perm= 75 #> perm= 76 #> perm= 77 #> perm= 78 #> perm= 79 #> perm= 80 #> perm= 81 #> perm= 82 #> perm= 83 #> perm= 84 #> perm= 85 #> perm= 86 #> perm= 87 #> perm= 88 #> perm= 89 #> perm= 90 #> perm= 91 #> perm= 92 #> perm= 93 #> perm= 94 #> perm= 95 #> perm= 96 #> perm= 97 #> perm= 98 #> perm= 99 #> perm= 100 #> Number of thresholds chosen (all possible thresholds) = 5 #> Getting all the cutoffs for the thresholds... #> Getting number of false positives in the permutation... #>  #>  ------------ SAMSeq executed! #>  #>  ------------ DIFERENTIAL EXPRESSION ANALYSIS WAS COMPLETE! expDef_result <- expressionDefinition(resultTool = cons_result,                                       groups = treats) deByTool <- listDeByTool(consexpressionList = cons_result,                          geneNames = row.names(gse95077),                          deList = expDef_result) upSetPlotData <- upSetPlotTools(df = deByTool,                                 condition = \"Control_vs_Treat\",                                 pathOut = \".\",                                 writeData = FALSE)"},{"path":"https://costasilvati.github.io/consexpressionR/reference/writeResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a table or data.frame in defined output file — writeResults","title":"Write a table or data.frame in defined output file — writeResults","text":"Write table data.frame defined output file","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/writeResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a table or data.frame in defined output file — writeResults","text":"","code":"writeResults(   data,   toolName = \"toolDE_x\",   sepCharacter = \"\\t\",   pathOutput = \".\" )"},{"path":"https://costasilvati.github.io/consexpressionR/reference/writeResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a table or data.frame in defined output file — writeResults","text":"data table data.frame dataset toolName text file name sepCharacter character separe data columns pathOutput path write output, need directory (default: \".\")","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/writeResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a table or data.frame in defined output file — writeResults","text":"void","code":""},{"path":"https://costasilvati.github.io/consexpressionR/reference/writeResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a table or data.frame in defined output file — writeResults","text":"","code":"df <- data.frame(col1 = c(\"treat1\", \"treat2\", \"treat3\"), col2 = c(1, 2, 3)) writeResults(data = df, toolName = \"test\")"}]
